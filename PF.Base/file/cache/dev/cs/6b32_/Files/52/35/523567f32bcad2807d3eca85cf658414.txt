a:5:{s:1:"d";a:100:{s:34:"user.component_block_tooltip_clean";s:2299:"if (Phpfox::getParam('tooltipadvanced.cover') && Phpfox::getUserParam('tooltipadvanced.see_advanced_tooltip')){

$oUser = Phpfox::getService('user');
$aUser = $oUser->getByUserName($this->request()->get('user_name'));
$aYou = $aUser['user_id'];

$aRow = Phpfox::getLib('phpfox.database')
          ->select('*')
            ->from(Phpfox::getT('user_field'), 'a')
            ->join(Phpfox::getT('photo'), 'b', 'a.cover_photo = b.photo_id')
            ->limit(1)
            ->where('a.user_id = '.$aYou)
            ->order('b.time_stamp DESC')
            ->execute('getRow');  

if ($aRow){

 if ($aRow['server_id'] == 0){ 
     $aImage_path = Phpfox::getParam('core.path');
     $aImage_path .= 'file/pic/photo/';
     $aImage_path .= $aRow['destination'];
     $aImage_path = str_replace("%s","_1024",$aImage_path);
	  }else{
		  $get = storage()->get('pf_cdn_servers');
          $url = $get->value->url;
		     $aImage_path = $url;
     $aImage_path .= 'file/pic/photo/';
     $aImage_path .= $aRow['destination'];
     $aImage_path = str_replace("%s","_1024",$aImage_path); 
		  
	  }

echo '<img src="'.$aImage_path.'" width=100%>';
}
}
if (Phpfox::getParam('tooltipadvanced.status') && Phpfox::getUserParam('tooltipadvanced.see_advanced_tooltip')){
$oUser = Phpfox::getService('user');
$aUser = $oUser->getByUserName($this->request()->get('user_name'));
$aYou = $aUser['user_id'];

$aRow = Phpfox::getLib('phpfox.database')
          ->select('*')
            ->from(Phpfox::getT('user_status'), 'a')
            ->limit(1)
            ->where('a.user_id = '.$aYou)
            ->order('a.time_stamp DESC')
            ->execute('getRow');  

if ($aRow){
$aQuote_start = Phpfox::getParam('core.path');
$aQuote_start .= "theme/frontend/default/style/default/image/misc/comment.png";

if (Phpfox::getParam('tooltipadvanced.status_lenght') != 0){
     $aChars = Phpfox::getParam('tooltipadvanced.status_lenght');
     $aText = $aRow['content']." ";
     $aText = substr($aText,0,$aChars);
     $aText = substr($aText,0,strrpos($aText,' '));
     $aText = $aText."...";
}else{
$aText = $aRow['content'];
}

if ($aRow){
echo '<div style="padding:5px"><img src="'.$aQuote_start.'" style="float: left;">'.$aText.'</div>';
}
}
}
";s:48:"admincp.component_controller_controller_apps_end";s:344:"foreach ($allApps as $key => $app) {
    if ($app instanceof Core\App\Objects) {
        if ($app->id == 'PHPfox_Core') {
            unset($allApps[$key]);
        }
    }
} 
 foreach ($allApps as $key => $app) {
	if ($app instanceof Core\App\Objects) {
		if ($app->id == 'PHPfox_Flavors') {
			unset($allApps[$key]);
		}
	}
} 
 ";s:14:"job_queue_init";s:2009:"\Core\Queue\Manager::instance()
	->addHandler('core_get_facebook_images', '\Apps\PHPfox_Core\Job\GetFacebookImages')
	->addHandler('core_clone_phpfox_tag', '\Apps\PHPfox_Core\Job\ClonePhpfoxTag')
	->addHandler('core_transfer_asset_files', '\Apps\PHPfox_Core\Job\TransferAssetFiles')
	->addHandler('core_storage_transfer_files', '\Apps\PHPfox_Core\Job\TransferStorageFiles')
	->addHandler('core_storage_transfer_files_update_db', '\Apps\PHPfox_Core\Job\TransferStorageFilesUpdateDB')
	->addHandler('core_storage_transfer_files_remove_local', '\Apps\PHPfox_Core\Job\TransferStorageFilesRemoveLocal')
	->addHandler('core_storage_transfer_files_update_db_execute', '\Apps\PHPfox_Core\Job\TransferStorageFilesUpdateDBExecute')
; 
 \Core\Queue\Manager::instance()->addHandler('core_newsletter_send_email_users',
    '\Apps\Core_Newsletter\Job\SendEmailUsers'); 
 \Core\Queue\Manager::instance()->addHandler('pages_generate_missing_thumbnails',
    '\Apps\Core_Pages\Job\GenerateMissingThumbnails'); 
 \Core\Queue\Manager::instance()
    ->addHandler('groups_member_join_notifications', '\Apps\PHPfox_Groups\Job\SendMemberJoinNotification')
    ->addHandler('groups_member_notifications', '\Apps\PHPfox_Groups\Job\SendMemberNotification')
    ->addHandler('groups_convert_old_group', '\Apps\PHPfox_Groups\Job\ConvertOldGroups'); 
 \Core\Queue\Manager::instance()->addHandler('core_activitypoint_update_points',
    '\Apps\Core_Activity_Points\Job\UpdatePoints'); 
 \Core\Queue\Manager::instance()->addHandler('event_convert_old_location', '\Apps\Core_Events\Job\ConvertOldLocation'); 
 \Core\Queue\Manager::instance()->addHandler('core_email_queue', 'Core_Job_MailQueue'); 
 \Core\Queue\Manager::instance()->addHandler('item_liked', 'Like_Job_ItemLiked'); 
 defined('PHPFOX') or exit('NO DICE!');

\Core\Queue\Manager::instance()->addHandler('user_inactive_mailing_job', 'User_Job_MailingInactive');
\Core\Queue\Manager::instance()->addHandler('user_import_user', 'User_Job_ImportUser'); 
 ";s:13:"bundle__start";s:5827:"$aBundleScripts[] = [
    'autoload.js'  => 'app_core-flavors',
    'autoload.css' => 'app_core-flavors',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-photos',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-comments'
]; 
 $aBundleScripts[] = [
    'autoload.js'  => 'app_core-announcement',
]; 
 $aBundleScripts[] = [
    'jscript/add.js' => 'app_core-newsletter',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-poke',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-pages',
    'autoload.js' => 'app_core-pages',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-twemoji-awesome',
    'autoload.js' => 'app_core-twemoji-awesome',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-music',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-facebook',
    'autoload.js' => 'app_core-facebook',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-groups',
    'autoload.css' => 'app_core-groups',
]; 
 $aBundleScripts[] = [
//    'autoload.css' => 'app_core-egift',
    'autoload.js' => 'app_core-egift',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-messages',
    'autoload.css' => 'app_core-messages',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_core-activity-points',
    'autoload.css' => 'app_core-activity-points',
]; 
 $aBundleScripts[] = [
//    'autoload.css' => 'app_core-events',
    'autoload.js' => 'app_core-events',
]; 
 $aBundleScripts[] = [
    'autoload.css' => 'app_core-CKEditor',
    'autoload.js' => 'app_core-CKEditor',
]; 
 $aBundleScripts[] = [
    'autoload.js' => 'app_ync-fbclone',
    'autoload.css' => 'app_ync-fbclone'
]; 
 /**
 * @copyright		[FOXEXPERT_COPYRIGHT]
 * @author  		Belan Ivan
 * @package  		App_Socialconnect
 */

defined('PHPFOX') or exit('NO DICE!');

/**
 *
 *
 * @copyright		[FOXEXPERT_COPYRIGHT]
 * @author  		Belan Ivan
 * @package  		App_LandingPage
 */
$aBundleScripts[] = [
    'autoload.js' => 'app_socialconnect',
    'autoload.css' => 'app_socialconnect',
]; 
 $aBundleScripts[] = [
    'autoload.js'  => 'flavor',
    'autoload.css' => 'flavor',
];

$aBundleScripts[] = [
    'autoload.js' => 'flavors_bootstrap',
]; 
 array_unshift($aBundleScripts, [
    'icofont.css'                                         => 'style_css',
    'font-awesome/css/font-awesome.min.css'               => 'style_css',
    'bootstrap-tokenfield.min.css'                        => 'style_css',
    'bootstrap.css'                                       => 'flavor_bootstrap',
    'boot.css'                                            => 'flavor_boot',
    'jquery.mCustomScrollbar.min.css'                     => 'style_css',
    'owl_carousel/owl.carousel.min.css'                   => 'style_css',
    'owl_carousel/owl.theme.default.min.css'              => 'style_css',
    'selectize.css'                                       => 'style_css',
    'asBreadcrumbs.min.css'                               => 'style_css',
    'jquery/jquery.js'                                    => 'static_script',
    'jquery/ui.js'                                        => 'static_script',
    'jquery/plugin/jquery.nanoscroller.min.js'            => 'static_script',
    'bootstrap.js'                                        => 'static_script',
    'common.js'                                           => 'static_script',
    'main.js'                                             => 'static_script',
    'ajax.js'                                             => 'static_script',
    'thickbox/thickbox.js'                                => 'static_script',
    'search.js'                                           => 'module_friend',
    'progress.js'                                         => 'static_script',
    'nprogress.js'                                        => 'static_script',
    'quick_edit.js'                                       => 'static_script',
    'feed.js'                                             => 'module_feed',
    'exif.js'                                             => 'static_script',
    'dropzone.js'                                         => 'static_script',
    'jquery/plugin/bootstrap-tokenfield.min.js'           => 'static_script',
    'register.js'                                         => 'module_user',
    'gender.js'                                           => 'module_user',
    'gmap.js'                                             => 'module_core',
    'jquery/plugin/jquery.mCustomScrollbar.concat.min.js' => 'static_script',
    'jquery/plugin/jquery.highlightFade.js'               => 'static_script',
    'jquery/plugin/jquery.scrollTo.js'                    => 'static_script',
    'user_info.js'                                        => 'static_script',
    'editor.js'                                           => 'static_script',
    'wysiwyg/default/core.js'                             => 'static_script',
    'country.js'                                          => 'module_core',
    'owl_carousel/owl.carousel.min.js'                    => 'static_script',
    'jquery-asBreadcrumbs.js'                             => 'static_script',
    'masonry/masonry.min.js'                              => 'static_script',
    'selectize/selectize.min.js'                          => 'static_script',
]); 
 $aBundleScripts[] = [
    'tag-friends.js' => 'module_feed',
    'places.js' => 'module_feed',
]; 
 ;
$aBundleScripts[] = [
    'update.js' => 'module_notification',
]; 
 $aBundleScripts[] = []; 
 $aBundleScripts[] = [
    'main.js'   => 'style_script',
]; 
 $aBundleScripts[] = [
    'browse.js' => 'module_user'
]; 
 $aBundleScripts[] = [
    'tag-friends.js' => 'module_feed',
]; 
 ";s:42:"core.component_block_template_logo_process";s:113:"$logo = flavor()->active->logo_url();
if ($logo) {
	$this->template()->assign([
		'logo' => $logo
	]);
} 
 ";s:43:"core.component_controller_index_visitor_end";s:446:"$content = '';
$banners = flavor()->active->banners();
if (count($banners)) {
	$usage = request()->get('image');
	if ($usage) {
		$image = [
			'image' => $usage,
			'info' => ''
		];
	} else {
		$total = rand(1, (count($banners)));
		$image = [];
		$cnt = 0;
		foreach ($banners as $banner) {
			$image = [
				'image' => $banner,
				'info' => ''
			];

			$cnt++;
			if ($cnt === $total) {
				break;
			}
		}
	}
} 
 ";s:7:"favicon";s:165:"if(is_object(flavor()->active)) {
    $f = flavor()->active->favicon_url();
    if ($f) {
        $favicon = $f . '?v=' . $oTpl->getStaticVersion();
    }
} 
 ";s:14:"get_controller";s:706:"$controller_name = \Phpfox_Module::instance()->getFullControllerName();
if (isset(flavor()->active->blocks) && isset(flavor()->active->blocks->{$controller_name})) {
	foreach (flavor()->active->blocks->{$controller_name} as $location => $html) {
		foreach ($html as $file) {
			if (substr($file, 0, 1) == '@') {
				new Core\Block($controller_name, $location, function () use ($file) {
					list($namespace, $module, $block) = explode('/', $file);

					\Phpfox::getBlock($module . '.' . $block);

					return @ob_get_clean();
				});

				continue;
			}

			new Core\Block($controller_name, $location, function () use ($file) {
				return view('@Flavor/' . $file);
			});
		}
	}
} 
 ";s:4:"init";s:693:"if ($forceFlavor = request()->get('force-flavor')) {
    define('PHPFOX_FORCE_FLAVOR_NAME', $forceFlavor);
} 
 defined('PHPFOX') or exit('NO DICE!');
if (!defined('PHPFOX_PAGE_ITEM_TYPE_0')) {
    define('PHPFOX_PAGE_ITEM_TYPE_0', 'pages');
}

$iProfilePageId = Phpfox::getUserBy('profile_page_id');
$bIsLoginAsPage = $iProfilePageId > 0 && Phpfox::getLib('pages.facade')->getPageItemType($iProfilePageId) == 'pages';

if ($bIsLoginAsPage) {
    $aCurrentUser = Phpfox::getUserBy();
    $aPrevUser = Phpfox::getService('pages')->getLastLogin();
    $aCurrentUser['user_group_id'] = $aPrevUser['user_group_id'];
    Phpfox::getService('user.auth')->setUser($aCurrentUser);
} 
 ";s:32:"library_template_getlayoutfile_1";s:156:"$path = flavor()->active->path;
$sThemeFile = $path . 'html/' . $sName . PHPFOX_TPL_SUFFIX;
if (file_exists($sThemeFile)) {
	$sFile = $sThemeFile;
} 
 ";s:24:"module_setcontroller_end";s:661:"if ($this->_sController == 'index-member' && Phpfox::isAdmin() && request()->get('preview')) {
	$this->_sController = 'index-visitor';
	\Phpfox::getService('user.auth')->reset();
} 
 if ($oReq->get('req1') == 'hashtag')
{
	$this->_sModule = 'core';
	$this->_sController = 'index-member';
} 
 if (Phpfox::isModule('ynresphoenix') && flavor()->active->id == 'ynresphoenix') {
    if ($this->_sModule == 'core' && ($this->_sController == 'index-visitor' || $this->_sController == 'index-member') && Phpfox::getLib('request') -> get('req1') != 'hashtag') {
        $this->_sModule = 'ynresphoenix';
        $this->_sController = 'landing';
    }
} 
 ";s:18:"run_set_controller";s:1808:"if (!defined('PHPFOX_INSTALLER') && !Phpfox::isAdminPanel()) {
	Phpfox_Template::instance()->setStyle([
		'theme_folder_name' => flavor()->active->legacy->theme,
		'style_folder_name' => flavor()->active->legacy->flavor,
		'theme_parent_id' => 0
	]);
} 
 if (in_array(Phpfox::getLib('module')->getFullControllerName(), ['core.index-member', 'pages.view', 'groups.view', 'event.view'])) {
    $comments_feed = setting('comment.comments_show_on_activity_feeds', 4) == 0 ? null : setting('comment.comments_show_on_activity_feeds', 4);
    Phpfox::getLib('setting')->setParam('comment.comment_page_limit', $comments_feed);
    Phpfox::getLib('setting')->setParam('comment.total_comments_in_activity_feed', $comments_feed);
    if (!setting('comment.comment_show_replies_on_comment')) {
        Phpfox::getLib('setting')->setParam('comment.thread_comment_total_display', 0);
    } else {
        Phpfox::getLib('setting')->setParam('comment.thread_comment_total_display',
            setting('comment.comment_replies_show_on_activity_feeds',
                4) == 0 ? null : setting('comment.comment_replies_show_on_activity_feeds', 1));
    }
} else {
    Phpfox::getLib('setting')->setParam('comment.comment_page_limit',
        setting('comment.comments_show_on_item_details',
            4) == 0 ? null : setting('comment.comments_show_on_item_details', 4));
    if (!setting('comment.comment_show_replies_on_comment')) {
        Phpfox::getLib('setting')->setParam('comment.thread_comment_total_display', 0);
    } else {
        Phpfox::getLib('setting')->setParam('comment.thread_comment_total_display',
            setting('comment.comment_replies_show_on_item_details',
                4) == 0 ? null : setting('comment.comment_replies_show_on_item_details', 1));
    }
} 
 ";s:22:"template_getfooter_end";s:216:"if (!Phpfox::isAdminPanel()) {
	$url = Phpfox::getLib('assets')->getAssetUrl('PF.Site/flavors/' . flavor()->active->id . '/assets/autoload.js');
    $this->_sFooter .= '<script src="' . $url . '"></script>';
} 
 ";s:22:"template_getheader_css";s:181:"if (!defined('PHPFOX_INSTALLER') && !Phpfox::isAdminPanel()) {
	$Theme->folder = flavor()->active->legacy->theme;
	$Theme->flavor_folder = flavor()->active->legacy->flavor;
} 
 ";s:22:"template_getheader_end";s:1265:"if (!Phpfox::isAdminPanel()) {
    $url = Phpfox::getLib('assets')->getAssetUrl('PF.Site/flavors/' . flavor()->active->id . '/assets/autoload.css');
	$sData .= '<link href="' . $url . 'autoload.css?v=' . Phpfox::internalVersion() . '" rel="stylesheet">';
} 
 $aPhrases = [
    'oops_something_went_wrong' => _p('oops_something_went_wrong'),
    'notice'                    => _p('notice'),
    'view_previous_comments'    => _p('view_previous_comments'),
    'view_number_more_comments' => _p('view_number_more_comments'),
    'view_one_more_comment'     => _p('view_one_more_comment'),
    'remove_preview'            => _p('remove_preview'),
    'edited'                    => _p('edited'),
    'show_edit_history'         => _p('show_edit_history'),
    'edit_history'              => _p('edit_history'),
    'you'                       => _p('you__l'),
    'stickers'                  => _p('stickers'),
    'pages'                     => _p('pages'),
    'groups'                    => _p('groups'),
    'submit'                    => _p('submit')

];

$sData .= '<script>var comment_phrases = ' . json_encode($aPhrases) . ';</script>'; 
 $sData .= '<script> 
oTranslations["create_album"] = "'. _p("create_album") .'";
</script>'; 
 ";s:25:"template_gettemplate_pass";s:312:"$path = flavor()->active->path;
$template = $path . 'html/' . $sTemplate . '.html';
if (file_exists($template)) {
	$vars = $this->getVar();
	$content = view('@Flavor/' . $sTemplate . '.html', $vars);
	echo $content;

	$skip_layout = true;

	Phpfox_Template::instance()->clean([
		'sHeader'
	]);
} 
 ";s:24:"template_gettemplatefile";s:1365:"$path = flavor()->active->path;
$sThemeFile = $path . 'html/' . $sTemplate . PHPFOX_TPL_SUFFIX;
if (file_exists($sThemeFile)) {
	$sFile = $sThemeFile;
} 
 $sDir = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));
$sCommentPath = $sDir . '/PF.Site/Apps/core-comments/views/block/';

if ($sTemplate == 'feed.block.comment') {
    $sTemplateFile = $sCommentPath . 'comment' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
}

if ($sTemplate == 'comment.block.mini') { // overwrite material-html template, it will @deprecated in Core 4.8.0
    $sTemplateFile = $sCommentPath . 'mini' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
} 
 //todo core should support to do this
$sDir = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__))))));
$sCoreMessagesPath = $sDir . '/PF.Site/Apps/core-messages/views/controller/';
if ($sTemplate == 'mail.controller.index') {
    $sTemplateFile = $sCoreMessagesPath . 'index' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
}
if ($sTemplate == 'mail.controller.panel') {
    $sTemplateFile = $sCoreMessagesPath . 'panel' . PHPFOX_TPL_SUFFIX;
    if (file_exists($sTemplateFile)) {
        $sFile = $sTemplateFile;
    }
} 
 ";s:40:"theme.component_controller_admincp_index";s:932:"$flavor_default = '';
$default = storage()->get('flavor/default');
if (isset($default->value)) {
	$flavor_default = $default->value;
}
$themes = [];
$default_theme = [];
$oAssets =  Phpfox::getLib('assets');
foreach (flavor()->all() as $flavor) {
	$assetUrl =  $oAssets->getAssetUrl($flavor->url . 'theme.png');
	if ($flavor->id == $flavor_default) {
		$default_theme = [
			'theme_id' => $flavor->id,
			'is_default' => true,
			'image' => ($flavor->icon ? ' class="image_load has_image" data-src="' . $assetUrl . '" ' : ''),
			'name' => $flavor->name
		];

		continue;
	}

	$themes[] = [
		'theme_id' => $flavor->id,
		'is_default' => false,
		'image' => ($flavor->icon ? ' class="image_load has_image" data-src="' . $assetUrl . '" ' : ''),
		'name' => $flavor->name
	];
}

if ($default_theme) {
	$themes = array_merge([$default_theme], $themes);
}
else {
	$themes[0]['is_default'] = true;
} 
 ";s:46:"admincp.service_maintain_delete_files_get_list";s:28563:"$aPluginFiles[] = 'PF.Base/module/photo/';
$aPluginFiles[] = 'PF.Site/Apps/core-photos/assets/autoload.css'; 
 $aPluginFiles[] = 'PF.Base/module/comment/'; 
 $aPluginFiles[] = 'PF.Base/module/newsletter/'; 
 $aPluginFiles[] = 'PF.Base/module/poke/'; 
 $aPluginFiles[] = 'PF.Base/module/pages/'; 
 $aPluginFiles[] = 'PF.Base/module/music/';
$aPluginFiles[] = 'PF.Site/Apps/core-music/assets/autoload.css'; 
 $aPluginFiles[] = 'PF.Site/Apps/core-groups/hooks/link.component_service_callback_getactivityfeed__1.php'; 
 $aPluginFiles[] = 'PF.Base/module/egift/'; 
 $aPluginFiles[] = 'PF.Base/module/mail/';
$aPluginFiles[] = 'PF.Base/less/modules/mail.less'; 
 $aPluginFiles[] = 'PF.Base/module/user/include/component/block/purchasepoints.class.php';
$aPluginFiles[] = 'PF.Base/module/user/template/default/block/purchasepoints.html.php';
$aPluginFiles[] = 'PF.Site/Apps/core-activity-points/Block/InformationBlock.php';
$aPluginFiles[] = 'PF.Site/Apps/core-activity-points/views/block/information.html.php'; 
 $aPluginFiles[] = 'PF.Base/module/event/'; 
 $aMore = [
    "PF.Site/Apps/phpFox_CKEditor/assets/autoload.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/autoload.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/adapters/jquery.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/build-config.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/CHANGES.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/ckeditor.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/config.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/contents.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/af.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/bg.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/bn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/bs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/cs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/cy.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/da.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/de-ch.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/de.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/el.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en-au.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en-gb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/en.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/eo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/es.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/et.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/eu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fa.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fr-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/fr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/gl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/gu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/he.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/hi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/hr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/hu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/id.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/is.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/it.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ja.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ka.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/km.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ko.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ku.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/lt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/lv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/mk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/mn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ms.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/nb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/nl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/no.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/oc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/pl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/pt-br.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/pt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ro.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ru.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/si.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sq.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sr-latn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/sv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/th.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/tr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/tt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/ug.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/uk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/vi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/zh-cn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/lang/zh.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/LICENSE.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/_translationstatus.txt",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/af.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/da.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/de-ch.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/de.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/el.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/en.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/es.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/et.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/eu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/he.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/id.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/it.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/km.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/no.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/oc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/si.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/th.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/about/dialogs/about.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/about/dialogs/hidpi/logo_ckeditor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/about/dialogs/logo_ckeditor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/clipboard/dialogs/paste.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/dialog/dialogDefinition.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/icons.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/icons_hidpi.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/image/dialogs/image.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/image/images/noimage.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/dialogs/anchor.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/dialogs/link.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/images/anchor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/link/images/hidpi/anchor.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/hidpi/icon-rtl.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/hidpi/icon.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/icon-rtl.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/magicline/images/icon.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/pastefromword/filter/default.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/CHANGELOG.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/dialogs/options.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/dialogs/toolbar.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/LICENSE.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/README.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/_translationstatus.txt",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/af.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/bg.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/cs.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/cy.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/da.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/de-ch.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/de.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/el.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/en.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/eo.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/es.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/et.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/eu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fa.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/fr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/gl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/he.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/hr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/hu.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/id.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/it.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ja.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/km.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ko.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ku.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/lt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/lv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/nb.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/nl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/no.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/oc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/pl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/pt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ru.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/si.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sl.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sq.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/sv.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/th.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/tr.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/tt.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/ug.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/uk.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/vi.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/lang/zh.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/specialchar/dialogs/specialchar.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/table/dialogs/table.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/tabletools/dialogs/tableCell.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/ciframe.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/tmpFrameset.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/wsc.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/wsc.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/dialogs/wsc_ie.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/LICENSE.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/README.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/plugins/wsc/skins/moono-lisa/wsc.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/README.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/css/samples.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/github-top.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/header-bg.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/header-separator.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/logo.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/img/navigation-tip.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/index.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/js/sample.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/js/sf.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/ajax.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/api.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/appendto.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/inlineall/logo.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/outputxhtml/outputxhtml.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/posteddata.php",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/sample.jpg",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/assets/uilanguages/languages.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/datafiltering.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/dialog/assets/my_dialog.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/dialog/dialog.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/divreplace.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/enterkey/enterkey.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.fla",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.swf",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/assets/outputforflash/swfobject.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/outputforflash.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/htmlwriter/outputhtml.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/index.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/inlineall.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/inlinebycode.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/inlinetextarea.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/jquery.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/magicline/magicline.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/readonly.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/replacebyclass.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/replacebycode.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/sample.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/sample.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/sample_posteddata.php",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/tabindex.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/toolbar/toolbar.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/uicolor.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/uilanguages.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/wysiwygarea/fullpage.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/old/xhtmlstyle.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/css/fontello.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/config.json",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.eot",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.svg",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.ttf",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/fontello.woff",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/font/LICENSE.txt",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/index.html",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/abstracttoolbarmodifier.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/fulltoolbareditor.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/toolbarmodifier.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/js/toolbartextmodifier.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/javascript.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/LICENSE",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/neo.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.js",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog_ie.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog_ie8.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/dialog_iequirks.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_gecko.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_ie.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_ie8.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/editor_iequirks.css",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/icons.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/icons_hidpi.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/arrow.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/close.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/close.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/lock-open.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/lock.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/hidpi/refresh.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/lock-open.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/lock.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/refresh.png",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/images/spinner.gif",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/skins/moono-lisa/readme.md",
    "PF.Site/Apps/phpFox_CKEditor/assets/ckeditor/styles.js",
    "PF.Site/Apps/phpFox_CKEditor/hooks/forum.component_ajax_reply.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/get_editor_end.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/set_editor_end.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/template_getheader_exclude_bundle_js.php",
    "PF.Site/Apps/phpFox_CKEditor/hooks/template_getheader_setting.php",
    "PF.Site/Apps/phpFox_CKEditor/icon.png",
    "PF.Site/Apps/phpFox_CKEditor/Install.php",
    "PF.Site/Apps/phpFox_CKEditor/start.php",
    "PF.Site/Apps/phpFox_CKEditor/views/admincp.html",
];
$aPluginFiles = array_merge($aPluginFiles, $aMore); 
 $aPluginFiles[] = 'PF.Site/flavors/material/less/mt_includes/all-message.less';
$aPluginFiles[] = 'PF.Site/flavors/material/html/mail.controller.index.html.php';
$aPluginFiles[] = 'PF.Site/flavors/material/html/mail.controller.panel.html.php';
$aPluginFiles[] = 'PF.Site/flavors/material/html/profile.controller.points.html.php';
$aPluginFiles[] = 'PF.Site/flavors/material/hooks/component_controller_points_process_end.php'; 
 ";s:11:"route_start";s:4290:"\Core\Api\ApiManager::register([
    'photo/:id' => [
        'api_service' => 'photo.api',
        'maps'        => [
            'get'    => 'get',
            'put'    => 'put',
            'delete' => 'delete'
        ],
        'where'       => ['id' => '\d+']
    ],
    'photo'     => [
        'api_service' => 'photo.api',
        'maps'        => [
            'get'  => 'gets',
            'post' => 'post'
        ]
    ],
]); 
 \Core\Api\ApiManager::register([
    'comment/:id' => [
        'api_service' => 'comment.api',
        'maps'        => [
            'get'    => 'get',
            'put'    => 'put',
            'delete' => 'delete'
        ],
        'where'       => ['id' => '\d+']
    ],
    'comment'     => [
        'api_service' => 'comment.api',
        'maps'        => [
            'get'  => 'gets',
            'post' => 'post'
        ]
    ],
]); 
 \Core\Api\ApiManager::register([
    'event/:id/rsvp' => [
        'api_service' => 'event.api',
        'maps' => [
            'put' => 'updateRsvp'
        ],
        'where' => ['id' => '\d+']
    ],
    'event/:id/guests' => [
        'api_service' => 'event.api',
        'maps' => [
            'get' => 'getGuests'
        ],
        'where' => ['id' => '\d+']
    ],
    'event/:id' => [
        'api_service' => 'event.api',
        'maps' => [
            'get' => 'get',
            'put' => 'put',
            'delete' => 'delete'
        ],
        'where' => ['id' => '\d+']
    ],
    'event' => [
        'api_service' => 'event.api',
        'maps' => [
            'get' => 'gets',
            'post' => 'post'
        ],
    ],
]); 
 \Core\Api\ApiManager::register([
    'attachment/' => [
        'api_service' => 'attachment.api',
        'maps' => [
            'post' => 'post'
        ],
    ],
]); 
 \Core\Api\ApiManager::register([
    'feed/:id' => [
        'api_service' => 'feed.api',
        'maps' => [
            'get' => 'get',
            'put' => 'put',
            'delete' => 'delete'
        ],
        'where' => ['id'=>'\d+']
    ],
    'feed' => [
        'api_service' => 'feed.api',
        'maps' => [
            'get' => 'gets',
            'post' => 'post'
        ]
    ],
    'feed/share' => [
        'api_service' => 'feed.api',
        'maps' => [
            'post' => 'share'
        ]
    ],
]); 
 \Core\Api\ApiManager::register([
    'friend' => [
        'api_service' => 'friend.api',
        'maps' => [
            'get' => 'get',
            'delete' => 'delete'
        ],
    ],
    'friend/request' => [
        'api_service' => 'friend.api',
        'maps' => [
            'post' => 'addRequest',
            'delete' => 'cancelRequest',
            'put' => 'processRequest'
        ],
    ],
]); 
 \Core\Api\ApiManager::register([
    'like' => [
        'api_service' => 'like.api',
        'maps' => [
            'post' => 'post',
            'delete' => 'delete',
            'get' => 'get'
        ]
    ],
]); 
 \Core\Api\ApiManager::register([
    'link' => [
        'api_service' => 'link.api',
        'maps' => [
            'post' => 'post'
        ]
    ],

]); 
 defined('PHPFOX') or exit('NO DICE!');

\Core\Api\ApiManager::register([
    'search' => [
        'api_service' => 'search.api',
        'maps' => [
            'get' => 'get'
        ]
    ],
]); 
 defined('PHPFOX') or exit('NO DICE!');

\Core\Api\ApiManager::register([
    'user/:id' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'get',
            'put' => 'put',
            'delete' => 'delete'
        ],
        'where' => ['id'=>'\d+']
    ],
    'user' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'gets',
            'post' => 'post'
        ]
    ],
    'user/custom/:id' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'getCustom',
            'put' => 'putCustom'
        ],
        'where' => ['id'=>'\d+']
    ],
    'user/mine' => [
        'api_service' => 'user.api',
        'maps' => [
            'get' => 'getMine'
        ]
    ],
]); 
 ";s:27:"template_template_getmenu_3";s:3569:"if ((!(Phpfox::getUserParam('photo.can_view_photos'))) && $sConnection == 'main') {
    foreach ($aMenus as $key => $menu) {
        if ($menu['module'] == 'photo') {
            unset($aMenus[$key]);
        }
    }
} 
 if (!Phpfox::getUserParam('pages.can_view_browse_pages')) {
    foreach ($aMenus as $index => $aMenu) {
        if ($aMenu['m_connection'] == 'main' && $aMenu['module'] == 'pages') {
            unset($aMenus[$index]);
        }
    }
} 
 /**
 * Created by PhpStorm.
 * User: phpFox
 * Date: 5/31/17
 * Time: 16:04
 */
defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isAppActive('Core_Music') && !Phpfox::getUserParam('music.can_access_music')) {
    foreach ($aMenus as $key => $value) {
        if ($value['module'] == 'music' && ($value['url'] = 'music' || $value['url'] = 'profile.music')) {
            unset($aMenus[$key]);
            break;
        }
    }
} 
 if (!Phpfox::getUserParam('groups.pf_group_browse')) {
    foreach ($aMenus as $index => $aMenu) {
        if ($aMenu['m_connection'] == 'main' && $aMenu['module'] == 'groups') {
            unset($aMenus[$index]);
        }
    }
} 
 /**
 * Created by PhpStorm.
 * User: phpFox
 * Date: 5/31/17
 * Time: 16:04
 */
defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::isAppActive('Core_Events') && !Phpfox::getUserParam('event.can_access_event')) {
    foreach ($aMenus as $key => $value) {
        if ($value['module'] == 'event' && ($value['url'] = 'event' || $value['url'] = 'profile.event')) {
            unset($aMenus[$key]);
            break;
        }
    }
} 
 if (!Phpfox::getUserParam('user.can_browse_users_in_public')) {
    foreach ($aMenus as $index => $aMenu) {
        if ($aMenu['m_connection'] == 'main' && $aMenu['module'] == 'user') {
            unset($aMenus[$index]);
        }
    }
} 
 if (Phpfox::isModule('ynresphoenix')) {
        if ($sConnection == 'main') {
            if (!Phpfox::isUser() || flavor()->active->id != 'ynresphoenix') {
                // Remove dashboard menu
                foreach ($aMenus as $key => $value) {
                    if ($value['module'] == 'ynresphoenix' && $value['url'] == 'ynresphoenix.dashboard') {
                        unset($aMenus[$key]);
                        break;
                    }
                }
            }
        }
        if(Phpfox::getParam('ynresphoenix.enable_fix_menu'))
        {
            Phpfox_Template::instance()->setHeader('<script type="text/javascript">
                        $Behavior.onSetFixMenuForPhoenixTemplate = function(){
                            $(window).bind(\'scroll\', function () {
                                if ($(window).scrollTop() > 180) {
                                    $(\'.ynresphoenix-navbar\').addClass(\'ynresphoenix-fixed\');
                                } else {
                                    $(\'.ynresphoenix-navbar\').removeClass(\'ynresphoenix-fixed\');
                                }
                            });
                        }
                </script>');
        }
        Phpfox_Template::instance()->setHeader([
          'jquery.mCustomScrollbar.min.css' => 'module_ynresphoenix',
          'jquery.mCustomScrollbar.concat.min.js' => 'module_ynresphoenix',
        ]);
        Phpfox_Template::instance()->setHeader(
          '<script type="text/javascript">
                    $Behavior.onChangePageOtherLanding = function(){$(".modal-backdrop").remove();}</script>'
        );
    } 
 ";s:29:"theme_get_default_photos_list";s:653:"$aPhotos['photo_default_album_photo'] = [
    'title' => _p('photo_album_default_photo'),
    'value' => $flavor->default_photo('photo_default_album_photo', true),
]; 
 $aPhotos['music_default_photo'] = [
    'title' => _p('song_default_photo'),
    'value' => $flavor->default_photo('music_default_photo', true),
];
$aPhotos['music_default_album_photo'] = [
    'title' => _p('music_album_default_photo'),
    'value' => $flavor->default_photo('music_default_album_photo', true),
]; 
 $aPhotos['event_default_photo'] = [
    'title' => _p('event_default_photo'),
    'value' => $flavor->default_photo('event_default_photo', true),
]; 
 ";s:37:"validator.admincp_user_settings_photo";s:2141:"$aValidation = [
    'points_photo'                        => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Activity points" must be greater than or equal to 0'),
    ],
    'max_images_per_upload'               => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Max images per upload" must be greater than 0'),
    ],
    'max_number_of_albums'                => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Max number of albums" must be greater than or equal to 0'),
    ],
    'photo_mature_age_limit'              => [
        'def'   => 'int:required',
        'min'   => '1',
        'title' => _p('"Photo mature age limit" must be greater than 0'),
    ],
    'how_many_tags_on_own_photo'          => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"How many times can a user tag their own photo?" must be greater than or equal to 0'),
    ],
    'how_many_tags_on_other_photo'        => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"How many times can a user tag photos added by other users?" must be greater than or equal to 0'),
    ],
    'photo_max_upload_size'               => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Max file size for photos upload" must be greater than or equal to 0'),
    ],
    'maximum_image_width_keeps_in_server' => [
        'def'   => 'int:required',
        'min'   => '1',
        'title' => _p('"Max image width keeps in server" must be greater than 0'),
    ],
    'photo_sponsor_price'                 => [
        'def'   => 'currency',
        'min'   => '0',
        'title' => _p('"Sponsor photo price" must be greater than or equal to 0'),
    ],
    'total_photos_displays'               => [
        'def'    => 'array:required',
        'subdef' => 'int:required',
        'min'    => '0',
        'title'  => _p('Each value of "Define how many images a user can view at once when browsing the public photo section" must be greater than 0'),
    ]
]; 
 ";s:29:"feed.service_feed_processfeed";s:3396:"if (isset($aOut['comments']) && count($aOut['comments'])) {
    foreach ($aOut['comments'] as $key => $aComment) {
        $aOut['comments'][$key]['extra_data'] = Phpfox::getService('comment')->getExtraByComment($aComment['comment_id']);
        $aOut['comments'][$key]['is_hidden'] = Phpfox::getService('comment')->checkHiddenComment($aComment['comment_id'], Phpfox::getUserId());
        $aOut['comments'][$key]['total_hidden'] = 1;
        $aOut['comments'][$key]['hide_ids'] = $aComment['comment_id'];
        $aOut['comments'][$key]['hide_this'] = $aOut['comments'][$key]['is_hidden'];
        if ($key && $aOut['comments'][$key - 1]['is_hidden'] && $aOut['comments'][$key]['is_hidden']) {
            $aOut['comments'][$key - 1]['hide_this'] = false;
            $aOut['comments'][$key]['hide_ids'] = $aOut['comments'][$key - 1]['hide_ids'] . ',' . $aComment['comment_id'];
            $aOut['comments'][$key]['total_hidden'] = $aOut['comments'][$key - 1]['total_hidden'] + 1;
        }
        if (isset($aComment['children']['comments']) && count($aComment['children']['comments'])) {
            foreach ($aComment['children']['comments'] as $ckey => $aChild) {
                $aOut['comments'][$key]['children']['comments'][$ckey]['extra_data'] = Phpfox::getService('comment')->getExtraByComment($aChild['comment_id']);
                $aOut['comments'][$key]['children']['comments'][$ckey]['is_hidden'] = Phpfox::getService('comment')->checkHiddenComment($aChild['comment_id'], Phpfox::getUserId());;
                $aOut['comments'][$key]['children']['comments'][$ckey]['total_hidden'] = 1;
                $aOut['comments'][$key]['children']['comments'][$ckey]['hide_ids'] = $aChild['comment_id'];
                $aOut['comments'][$key]['children']['comments'][$ckey]['hide_this'] = $aOut['comments'][$key]['children']['comments'][$ckey]['is_hidden'];
                if ($ckey && $aOut['comments'][$key]['children']['comments'][$ckey - 1]['is_hidden'] && $aOut['comments'][$key]['children']['comments'][$ckey]['is_hidden']) {
                    $aOut['comments'][$key]['children']['comments'][$ckey - 1]['hide_this'] = false;
                    $aOut['comments'][$key]['children']['comments'][$ckey]['hide_ids'] = $aOut['comments'][$key]['children']['comments'][$ckey - 1]['hide_ids'] . ',' . $aChild['comment_id'];
                    $aOut['comments'][$key]['children']['comments'][$ckey]['total_hidden'] = $aOut['comments'][$key]['children']['comments'][$ckey - 1]['total_hidden'] + 1;
                }
            }
        }
        if (!setting('comment.comment_show_replies_on_comment')) {
            $aOut['comments'][$key]['last_reply'] = Phpfox::getService('comment')->getLastChild($aComment['comment_id'], $aComment['type_id'], $aComment['item_id']);
        }
    }
} 
 if (isset($aOut['privacy'])) {
    $sIconClass = 'ico ';
    switch ((int)$aOut['privacy']) {
        case 0:
            $sIconClass .= 'ico-globe';
            break;
        case 1:
            $sIconClass .= 'ico-user3-two';
            break;
        case 2:
            $sIconClass .= 'ico-user-man-three';
            break;
        case 3:
            $sIconClass .= 'ico-lock';
            break;
        case 4:
            $sIconClass .= 'ico-gear-o';
            break;
    }

    $aOut['privacy_icon_class'] = $sIconClass;
} 
 ";s:25:"module_getcomponent_start";s:812:"if ($sClass == 'feed.comment') {
    $sClass = 'comment.comment';
} 
 if (defined('PHPFOX_IS_USER_PROFILE') && Phpfox::isModule('yncfbclone') && flavor()->active->id == 'yncfbclone') {
    if ($sClass == 'friend.profile') {
        $sClass = 'yncfbclone.friendprofile';
    }
    if ($sClass == 'v.profile') {
        $sClass = 'yncfbclone.videoprofile';
    }

    Phpfox::getLib('template')->setHeader(array(
            '<script type="text/javascript">$Behavior.initAddButton = function(){if ($(\'._is_profile_view\').length > 0 && $(\'.app-addnew-block\').length > 0) {
                var btnAdd = $(\'.app-addnew-block\');
                var silbs = $(\'.header_bar_search\');
                btnAdd.insertBefore(silbs, btnAdd);
            }
        }</script>'
        )
    );
} 
 ";s:20:"template_gettemplate";s:1970:"if ($sTemplate == 'notification.controller.panel') {
    array_walk($this->_aVars['aNotifications'], function (&$aNotifcation) {
        if (in_array($aNotifcation['type_id'], ['feed_mini_like'])) {
            $aNotifcation['message'] = comment_parse_emojis($aNotifcation['message']);
        }
    });

} else if ($sTemplate == 'notification.controller.index') {
    array_walk($this->_aVars['aNotifications'], function (&$aNotifcationOfDay) {
        array_walk($aNotifcationOfDay, function (&$aNotifcation) {
            if (in_array($aNotifcation['type_id'], ['feed_mini_like'])) {
                $aNotifcation['message'] = comment_parse_emojis($aNotifcation['message']);
            }
        });
    });
} 
 if ($sTemplate == 'user.block.rows_wide') {
    $aUser = Phpfox::getLib('template')->getVar('aUser');
    $aLocation = [];
    if (!empty($aUser)) {
        if (!empty($aUser['country_iso']) && $sCountry = Phpfox::getService('core.country')->getCountry($aUser['country_iso'], 'country')) {
            $aLocation[] = $sCountry;
        }

        if (!empty($aUser['country_child_id']) && $sState = Phpfox::getService('core.country')->getChild($aUser['country_child_id'])) {
            $aLocation[] = $sState;
        }

        if (count($aLocation) < 2 && !empty($aUser['city_location'])) {
            $aLocation[] = $aUser['city_location'];
        }

        if (Phpfox::isUser()) {
            $aUser['is_blocked'] = Phpfox::getService('user.block')->isBlocked($aUser['user_id'], Phpfox::getUserId());
        }

        if (!isset($aUser['is_featured'])) {
            $aUser['is_featured'] = Phpfox::getService('user')->isFeatured($aUser['user_id']);
        }

        if (!empty($aLocation)) {
            $aLocation = array_reverse($aLocation);
            $aUser['location_string'] = implode(', ', $aLocation);
        }

        Phpfox::getLib('template')->assign('aUser', $aUser);
    }
} 
 ";s:34:"validator.admincp_settings_comment";s:1246:"$aValidation['comments_to_check'] = [
    'def'   => 'int:required',
    'min'   => '1',
    'title' => _p('"Comments To Check" must be greater than 0'),
];
$aValidation['total_minutes_to_wait_for_comments'] = [
    'def'   => 'int',
    'min'   => '0',
    'title' => _p('"Comment Minutes to Wait Until Next Check" be greater than or equal to 0'),
];
$aValidation['comments_show_on_activity_feeds'] = [
    'def'   => 'int',
    'min'   => '0',
    'title' => _p('"Number of comment will be shown on activity feeds" must be greater than or equal to 0'),
];
$aValidation['comments_show_on_item_details'] = [
    'def'   => 'int',
    'min'   => '0',
    'title' => _p('"Number of comment will be shown on item details" must be greater than or equal to 0'),
];
$aValidation['comment_replies_show_on_activity_feeds'] = [
    'def'   => 'int',
    'min'   => '0',
    'title' => _p('"Number of replies will be shown on each comment on activity feeds" must be greater than or equal to 0'),
];
$aValidation['comment_replies_show_on_item_details'] = [
    'def'   => 'int',
    'min'   => '0',
    'title' => _p('"Number of replies will be shown on each comment on item details" must be greater than or equal to 0'),
]; 
 ";s:39:"validator.admincp_user_settings_comment";s:308:"$aValidation['points_comment'] = [
    'def'   => 'int:required',
    'min'   => '0',
    'title' => _p('validate_points_comment'),
];

$aValidation['comment_post_flood_control'] = [
    'def'   => 'int:required',
    'min'   => '0',
    'title' => _p('validate_comment_post_flood_control'),
]; 
 ";s:31:"feed.service_process_deletefeed";s:2379:"if ($aFeed['type_id'] == 'poke') {
    $aPokeData = Phpfox::getService('poke')->getPokeData($aFeed['item_id']);
    if (isset($aPokeData['user_id'])) {
        $aFeed['parent_user_id'] = $aPokeData['user_id'];
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox_Request::instance()->get('module') == 'pages' && !empty($aFeed['parent_user_id'])) {
    $check = Phpfox::getService('pages')->checkIfPageUser($aFeed['parent_user_id']);
    if($check) {
        $aPage = Phpfox::getService('pages')->getPage($aFeed['parent_user_id']);
        if (isset($aPage['page_id']) && Phpfox::getService('pages')->isAdmin($aPage)) {
            define('PHPFOX_FEED_CAN_DELETE', true);
        }
    }
}

if(in_array($sType, ['pages_photo', 'pages_cover_photo']) && isset($aFeed['user_id'])) {
    $pageUser = Phpfox::getService('user')->getUser($aFeed['user_id'], 'profile_page_id');
    $aPage = Phpfox::getService('pages')->getPage($pageUser['profile_page_id']);
    if (isset($aPage['page_id']) && Phpfox::getService('pages')->isAdmin($aPage)) {
        define('PHPFOX_FEED_CAN_DELETE', true);
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox_Request::instance()->get('module') == 'groups' && !empty($aFeed['parent_user_id'])) {
    $check = Phpfox::getService('groups')->checkIfGroupUser($aFeed['parent_user_id']);
    if($check) {
        $aGroup = Phpfox::getService('groups')->getPage($aFeed['parent_user_id']);
        if (isset($aGroup['page_id']) && Phpfox::getService('groups')->isAdmin($aGroup)) {
            define('PHPFOX_FEED_CAN_DELETE', true);
        }
    }
}

if(in_array($sType, ['groups_photo', 'groups_cover_photo']) && isset($aFeed['user_id'])) {
    $groupUser = Phpfox::getService('user')->getUser($aFeed['user_id'], 'profile_page_id');
    $aGroup = Phpfox::getService('groups')->getPage($groupUser['profile_page_id']);
    if (isset($aGroup['page_id']) && Phpfox::getService('groups')->isAdmin($aGroup)) {
        define('PHPFOX_FEED_CAN_DELETE', true);
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (Phpfox_Request::instance()->get('module') == 'event') {
    $aEvent = Phpfox::getService('event')->getForEdit($aFeed['parent_user_id'], true);
    if (isset($aEvent['event_id']) && $aEvent['user_id'] == Phpfox::getUserId()) {
        define('PHPFOX_FEED_CAN_DELETE', true);
    }
} 
 ";s:35:"comment.service_comment_massmail__1";s:335:"if (defined('PHPFOX_IS_PAGES_VIEW') && PHPFOX_IS_PAGES_VIEW) {
    foreach ($aRows as &$aRow) {
        if ($iPageId = Phpfox::getService('user')->getUser($aRow['owner_user_id'], 'u.profile_page_id')) {
            $aRow['user_id'] = Phpfox::getService('pages')->getPageOwnerId($iPageId['profile_page_id']);
        }
    }
} 
 ";s:40:"core.template_block_upload_form_action_1";s:984:"defined('PHPFOX') or exit('NO DICE!');

if (defined('PHPFOX_IS_PAGES_ADD') && PHPFOX_IS_PAGES_ADD && Phpfox::getService('pages')->isAdmin($this->_aVars['aForms'])) {
    echo '<a role="button" class="text-uppercase fw-bold change_photo" onclick="tb_show(\'' . _p('edit_thumbnail') . '\', $.ajaxBox(\'pages.cropme\', \'height=400&width=500&id=' . $this->_aVars['aForms']['page_id'] . '\'))"><i class="ico ico-text-file-edit"></i>&nbsp;&nbsp;&nbsp;' . _p('edit_thumbnail') . '</a>';
} 
 defined('PHPFOX') or exit('NO DICE!');

if (defined('PHPFOX_IS_GROUPS_ADD') && PHPFOX_IS_GROUPS_ADD && Phpfox::getService('groups')->isAdmin($this->_aVars['aForms'])) {
    echo '<a role="button" class="text-uppercase fw-bold change_photo" onclick="tb_show(\'' . _p('edit_thumbnail') . '\', $.ajaxBox(\'groups.cropme\', \'height=400&width=500&id=' . $this->_aVars['aForms']['page_id'] . '\'))"><i class="ico ico-text-file-edit"></i>&nbsp;&nbsp;&nbsp;' . _p('edit_thumbnail') . '</a>';
} 
 ";s:38:"feed.service_feed_get_feed_actions_end";s:155:"if (Phpfox::getService('pages')->isLoginAsPage() && $aActions['can_share']) {
    $aActions['can_share'] = false;
    $aActions['total_action']--;
} 
 ";s:36:"feed.service_feed_getsharelinks__end";s:887:"if (defined('PHPFOX_IS_PAGES_VIEW')) {
    foreach ($aLinks as $index => $aLink) {
        if ($aLink['module_id'] == 'photo' && $aIntegrates = storage()->get('pages_integrate')) {
            $aIntegrates = (array)$aIntegrates->value;
            if (array_key_exists('photo', $aIntegrates) && !$aIntegrates['photo']) {
                unset($aLinks[$index]);
            }
        }
    }
} 
 if (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE === 'groups') {
    foreach ($aLinks as $index => $aLink) {
        if ($aLink['module_id'] == 'photo' && $aIntegrates = storage()->get('groups_integrate')) {
            $aIntegrates = (array)$aIntegrates->value;
            if (array_key_exists('photo', $aIntegrates) && !$aIntegrates['photo']) {
                unset($aLinks[$index]);
            }
        }
    }
} 
 ";s:34:"feed.service_process_addcomment__1";s:2715:"if (isset($this->_aCallback['module']) && $this->_aCallback['module'] == 'pages' && Phpfox::getUserId() != $this->_aCallback['email_user_id']) {
    $sLink = $this->_aCallback['link'] . 'comment-id_' . $iStatusId . '/';

    // get and send email/notification to all admins of page
    $aAdmins = Phpfox::getService('pages')->getPageAdmins($this->_aCallback['item_id']);

    foreach ($aAdmins as $aAdmin) {
        if (Phpfox::getUserBy('user_id') == $aAdmin['user_id'] || (!empty($this->_aCallback['notification']) && $aAdmin['user_id'] == $this->_aCallback['email_user_id'])) {
            continue;
        }
        Phpfox::getLib('mail')->to($aAdmin['user_id'])
            ->subject(['full_name_wrote_a_comment_on_page_title', [
                'full_name' => $aAdmin['full_name'],
                'title' => $this->_aCallback['item_title']
            ]])
            ->message(['full_name_wrote_a_comment_on_page_link', [
                'full_name' => $aAdmin['full_name'],
                'title' => $this->_aCallback['item_title'],
                'link' => $sLink
            ]])
            ->notification('comment.add_new_comment')
            ->send();

        if (Phpfox::isModule('notification')) {
            Phpfox::getService('notification.process')->add('pages_comment', $iStatusId, $aAdmin['user_id']);
        }
    }
} 
 if (isset($this->_aCallback['module']) && $this->_aCallback['module'] == 'groups' && Phpfox::getUserId() != $this->_aCallback['email_user_id']) {
    $sLink = $this->_aCallback['link'] . 'comment-id_' . $iStatusId . '/';

    // get and send email/notification to all admins of group
    $aGroup = \Phpfox::getService('groups')->getPage($this->_aCallback['item_id']);
    $aAdmins = Phpfox::getService('groups')->getPageAdmins($this->_aCallback['item_id']);
    foreach ($aAdmins as $aAdmin) {
        if (Phpfox::getUserId() == $aAdmin['user_id']) {
            continue;
        }
        Phpfox::getLib('mail')->to($aAdmin['user_id'])
            ->subject(['full_name_wrote_a_comment_on_group_title', [
                'full_name' => \Phpfox::getUserBy('full_name'),
                'title' => $aGroup['title']
            ]])
            ->message(['full_name_wrote_a_comment_on_group_link', [
                'full_name' => \Phpfox::getUserBy('full_name'),
                'title' => $aGroup['title'],
                'link' => $sLink
            ]])
            ->notification('comment.add_new_comment')
            ->send();
        if (Phpfox::isModule('notification')) {
            Phpfox::getService('notification.process')->add('groups_comment', $iStatusId, $aAdmin['user_id']);
        }
    }
} 
 ";s:35:"feed.service_process_deletefeed_end";s:592:"defined('PHPFOX') or exit('NO DICE!');

if ($aFeed['type_id'] == 'pages_comment' && $aFeed['item_id']) {
    db()->delete(':pages_feed', ['type_id' => 'pages_comment', 'item_id' => $aFeed['item_id']]);
    db()->delete(':pages_feed_comment', ['feed_comment_id' => $aFeed['item_id']]);
} 
 defined('PHPFOX') or exit('NO DICE!');

if ($aFeed['type_id'] == 'groups_comment' && $aFeed['item_id']) {
    db()->delete(':pages_feed', ['type_id' => 'groups_comment', 'item_id' => $aFeed['item_id']]);
    db()->delete(':pages_feed_comment', ['feed_comment_id' => $aFeed['item_id']]);
} 
 ";s:33:"friend.component_block_search_get";s:2024:"defined('PHPFOX') or exit('NO DICE!');

if (count($aFriends) &&
    ((!PHPFOX_IS_AJAX && defined('PHPFOX_PAGES_EDIT_ID') && PHPFOX_PAGES_EDIT_ID > 0) ||
        (PHPFOX_IS_AJAX && Phpfox_Request::instance()->get('friend_item_id') && $this->getParam('friend_module_id') == 'pages'))
) {
    defined('PHPFOX_PAGES_EDIT_ID') or define('PHPFOX_PAGES_EDIT_ID',
        Phpfox_Request::instance()->get('friend_item_id'));
    $aInvites = Phpfox::getService('pages')->getCurrentInvites(PHPFOX_PAGES_EDIT_ID);
    list(, $aMembers) = Phpfox::getService('pages')->getMembers(PHPFOX_PAGES_EDIT_ID);

    foreach ($aFriends as $iKey => $aFriend) {
        if (is_array($aInvites) && isset($aInvites[$aFriend['user_id']])) {
            $aFriends[$iKey]['is_active'] = _p('invited');
            continue;
        }
        if (is_array($aMembers) && in_array($aFriend['user_id'], array_column($aMembers, 'user_id'))) {
            $aFriends[$iKey]['is_active'] = _p('liked');
        }
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

if (count($aFriends) &&
    ((!PHPFOX_IS_AJAX && defined('PHPFOX_PAGES_EDIT_ID') && PHPFOX_PAGES_EDIT_ID > 0) ||
        (PHPFOX_IS_AJAX && Phpfox_Request::instance()->get('friend_item_id')) && $this->getParam('friend_module_id') == 'groups')
) {
    defined('PHPFOX_PAGES_EDIT_ID') or define('PHPFOX_PAGES_EDIT_ID',
        Phpfox_Request::instance()->get('friend_item_id'));
    $aInvites = Phpfox::getService('groups')->getCurrentInvitesForGroup(PHPFOX_PAGES_EDIT_ID);
    list(, $aMembers) = Phpfox::getService('groups')->getMembers(PHPFOX_PAGES_EDIT_ID);

    foreach ($aFriends as $iKey => $aFriend) {
        if (is_array($aInvites) && isset($aInvites[$aFriend['user_id']])) {
            $aFriends[$iKey]['is_active'] = _p('invited');
            continue;
        }
        if (is_array($aMembers) && in_array($aFriend['user_id'], array_column($aMembers, 'user_id'))) {
            $aFriends[$iKey]['is_active'] = _p('joined');
        }
    }
} 
 ";s:17:"get_module_blocks";s:1273:"if (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE == 'pages' && $iId == 2) {
    $aBlocks[2][] = ['type_id' => 0, 'component' => 'pages.pending', 'params' => []];
}

$sModuleName = Phpfox::getLib('module')->getModuleName();
if ($iId == 11 && Phpfox_Component::__getParam('show_page_cover')) {
    $aBlocks[11][] = ['type_id' => 0, 'component' => 'pages.photo', 'params' => [
        'aPage' => Phpfox_Component::__getParam('page_to_show_cover')
    ]];
} 
 if (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE == 'groups' && $iId == 2) {
    $aBlocks[2][] = ['type_id' => 0, 'component' => 'groups.pending', 'params' => []];
}

$sModuleName = Phpfox::getLib('module')->getModuleName();
if ($iId == 11 && Phpfox_Component::__getParam('show_group_cover')) {
    $aBlocks[11][] = ['type_id' => 0, 'component' => 'groups.photo', 'params' => [
        'aPage' => Phpfox_Component::__getParam('group_to_show_cover')
    ]];
} 
 /**
 * Created by PhpStorm.
 * User: minhhai
 * Date: 2/10/17
 * Time: 15:51
 */

if ($this->_sController == 'landing' && $this->_sModule == 'ynresphoenix') {
    if (in_array($iId,[1,3,9,10])){
        return [];
    }
} 
 ";s:38:"link.component_ajax_addviastatusupdate";s:5308:"if (array_key_exists('callback_module', $aVals) && $aVals['callback_module'] == 'pages') {
    // temporary save content, because function send of mail clean all => cause issue when use plugin in ajax
    $content = ob_get_contents();
    ob_clean();

    // validate whom to send notification
    $aPage = Phpfox::getService('pages')->getPage($aVals['callback_item_id']);
    if ($aPage) {
        $iLinkId = Phpfox::getService('link.process')->getInsertId();
        $aLink = Phpfox::getService('link')->getLinkById($iLinkId);
        if($aLink) {
            $sLinkUrl = $aLink['redirect_link'];
            $postedUserFullName = Phpfox::getUserBy('full_name');

            $pageUserId = Phpfox::getService('pages')->getUserId($aPage['page_id']);
            if ($this->get('custom_pages_post_as_page')) {
                $pageUser = Phpfox::getService('user')->getUser($pageUserId, 'full_name');
                if ($pageUser) {
                    $postedUserFullName = $pageUser['full_name'];
                }
            }

            $varPhraseTitle = 'full_name_posted_a_link_on_page_title';
            $varPhraseLink = 'full_name_posted_a_link_on_page_link';

            // get all admins (include owner), send email and notification
            $aAdmins = Phpfox::getService('pages')->getPageAdmins($aVals['callback_item_id']);
            foreach ($aAdmins as $aAdmin) {
                if ($aLink['user_id'] == $aAdmin['user_id']) { // is owner of link
                    continue;
                }

                if ($aPage['user_id'] == $aAdmin['user_id']) { // is owner of page
                    if ($aLink['user_id'] == $pageUserId) { // post as page
                        continue;
                    }
                    $varPhraseTitle = 'full_name_posted_a_link_on_your_page_title';
                    $varPhraseLink = 'full_name_posted_a_link_on_your_page_link';
                }

                $aSubjectPhrase = [$varPhraseTitle, [
                    'full_name' => $postedUserFullName,
                    'title' => $aPage['title']
                ]];
                $aMessagePhrase = [$varPhraseLink, [
                    'full_name' => $postedUserFullName,
                    'title' => $aPage['title'],
                    'link' => $sLinkUrl
                ]];

                Phpfox::getLib('mail')->to($aAdmin['user_id'])
                    ->subject($aSubjectPhrase)
                    ->message($aMessagePhrase)
                    ->notification('comment.add_new_comment')
                    ->send();

                if (Phpfox::isModule('notification')) {
                    Phpfox::getService('notification.process')->add('pages_comment_link', $iLinkId, $aAdmin['user_id']);
                }
            }
        }
    }

    // return content
    echo $content;
} 
 if (array_key_exists('callback_module', $aVals) && $aVals['callback_module'] == 'groups') {
    // temporary save content, because function send of mail clean all => cause issue when use plugin in ajax
    $content = ob_get_contents();
    ob_clean();

    // validate whom to send notification
    $aGroup = Phpfox::getService('groups')->getPage($aVals['callback_item_id']);
    if ($aGroup) {
        $iLinkId = Phpfox::getService('link.process')->getInsertId();
        $aLink = Phpfox::getService('link')->getLinkById($iLinkId);
        if($aLink) {
            $sLinkUrl = $aLink['redirect_link'];
            $postedUserFullName = Phpfox::getUserBy('full_name');

            $varPhraseTitle = 'full_name_posted_a_link_on_group_title';
            $varPhraseLink = 'full_name_posted_a_link_on_group_link';

            // get all admins (include owner), send email and notification
            $aAdmins = Phpfox::getService('groups')->getPageAdmins($aVals['callback_item_id']);
            foreach ($aAdmins as $aAdmin) {
                if ($aLink['user_id'] == $aAdmin['user_id']) { // is owner of link
                    continue;
                }

                if ($aGroup['user_id'] == $aAdmin['user_id']) { // is owner of group
                    $varPhraseTitle = 'full_name_posted_a_link_on_your_group_title';
                    $varPhraseLink = 'full_name_posted_a_link_on_your_group_link';
                }

                $aSubjectPhrase = [$varPhraseTitle, [
                    'full_name' => $postedUserFullName,
                    'title' => $aGroup['title']
                ]];
                $aMessagePhrase = [$varPhraseLink, [
                    'full_name' => $postedUserFullName,
                    'title' => $aGroup['title'],
                    'link' => $sLinkUrl
                ]];

                Phpfox::getLib('mail')->to($aAdmin['user_id'])
                    ->subject($aSubjectPhrase)
                    ->message($aMessagePhrase)
                    ->notification('comment.add_new_comment')
                    ->send();

                if (Phpfox::isModule('notification')) {
                    Phpfox::getService('notification.process')->add('groups_comment_link', $iLinkId, $aAdmin['user_id']);
                }
            }
        }
    }

    // return content
    echo $content;
} 
 ";s:43:"mail.component_ajax_compose_process_success";s:76:"if (!empty($sType) && $sType == 'claim-page') {
    $this->reload();
} 
 ";s:33:"photo.component_ajax_process_done";s:4702:"if (isset($aCallback['module']) && $aCallback['module'] == 'pages') {
    // temporary save content, because function send of mail clean all => cause issue when use plugin in ajax
    $content = ob_get_contents();
    ob_clean();

    // validate whom to send notification
    $aPage = Phpfox::getService('pages')->getPage($aPhoto['group_id']);
    if ($aPage) {
        $sLink = Phpfox::getService('pages')->getUrl($aPage['page_id'], $aPage['title'], $aPage['vanity_url']);
        $postedUserFullName = Phpfox::getUserBy('full_name');

        $pageUserId = Phpfox::getService('pages')->getUserId($aPage['page_id']);
        if ($this->get('custom_pages_post_as_page')) {
            $pageUser = Phpfox::getService('user')->getUser($pageUserId, 'full_name');
            if ($pageUser) {
                $postedUserFullName = $pageUser['full_name'];
            }
        }

        $varPhraseTitle = 'full_name_post_some_images_on_page_title';
        $varPhraseLink = 'full_name_post_some_images_on_page_title_link';

        // get all admins (include owner) and send notification
        $aAdmins = Phpfox::getService('pages')->getPageAdmins($aPage['page_id']);
        foreach ($aAdmins as $aAdmin) {
            if ($aPhoto['user_id'] == $aAdmin['user_id']) { // is owner of photo
                continue;
            }

            if ($aPage['user_id'] == $aAdmin['user_id']) { // is owner of page
                if ($aPhoto['user_id'] == $pageUserId) { // post as page
                    continue;
                }
                $varPhraseTitle = 'full_name_post_some_images_on_your_page_title';
                $varPhraseLink = 'full_name_post_some_images_on_your_page_title_link';
            }

            Phpfox::getLib('mail')->to($aAdmin['user_id'])
                ->subject(['full_name_post_some_images_on_page_title', [
                    'full_name' => $postedUserFullName,
                    'title' => $aPage['title']
                ]])
                ->message(['full_name_post_some_images_on_page_title_link', [
                    'full_name' => $postedUserFullName,
                    'link' => $sLink,
                    'title' => $aPage['title']
                ]])
                ->notification('comment.add_new_comment')
                ->send();

            if (Phpfox::isModule('notification')) {
                Phpfox::getService('notification.process')->add('pages_post_image', $aPhoto['photo_id'], $aAdmin['user_id']);
            }
        }
    }

    // return content
    echo $content;
} 
 if (isset($aCallback['module']) && $aCallback['module'] == 'groups') {
    // temporary save content, because function send of mail clean all => cause issue when use plugin in ajax
    $content = ob_get_contents();
    ob_clean();

    // validate whom to send notification
    $aGroup = Phpfox::getService('groups')->getPage($aPhoto['group_id']);
    if ($aGroup) {
        $sLink = Phpfox::getService('groups')->getUrl($aGroup['page_id'], $aGroup['title'], $aGroup['vanity_url']);
        $postedUserFullName = Phpfox::getUserBy('full_name');

        $varPhraseTitle = 'full_name_post_some_images_on_group_title';
        $varPhraseLink = 'full_name_post_some_images_on_group_title_link';

        // get all admins (include owner) and send notification
        $aAdmins = Phpfox::getService('groups')->getPageAdmins($aGroup['page_id']);
        foreach ($aAdmins as $aAdmin) {
            if ($aPhoto['user_id'] == $aAdmin['user_id']) { // is owner of photo
                continue;
            }

            if ($aGroup['user_id'] == $aAdmin['user_id']) { // is owner of group
                $varPhraseTitle = 'full_name_post_some_images_on_your_group_title';
                $varPhraseLink = 'full_name_post_some_images_on_your_group_title_link';
            }

            Phpfox::getLib('mail')->to($aAdmin['user_id'])
                ->subject([$varPhraseTitle, [
                    'full_name' => $postedUserFullName,
                    'title' => $aGroup['title']
                ]])
                ->message([$varPhraseLink, [
                    'full_name' => $postedUserFullName,
                    'link' => $sLink,
                    'title' => $aGroup['title']
                ]])
                ->notification('comment.add_new_comment')
                ->send();

            if (Phpfox::isModule('notification')) {
                Phpfox::getService('notification.process')->add('groups_post_image', $aPhoto['photo_id'], $aAdmin['user_id']);
            }
        }
    }

    // return content
    echo $content;
} 
 ";s:65:"photo.component_service_callback_getactivityfeed__get_item_before";s:825:"if (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE == 'pages') {
    $sFeedTable = 'pages_feed';
} else {
    if ($iFeedId && isset($aPhotoIte['module_id']) && $aPhotoIte['module_id'] == 'pages') {
        $sFeedTable = 'pages_feed';
    }
} 
 if (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE == 'groups') {
    $sFeedTable = 'pages_feed';
} else {
    if ($iFeedId && isset($aPhotoIte['module_id']) && $aPhotoIte['module_id'] == 'groups') {
        $sFeedTable = 'pages_feed';
    }
} 
 if (defined('PHPFOX_IS_EVENT_VIEW')) {
    $sFeedTable = 'event_feed';
} else {
    if ($iFeedId && isset($aPhotoIte['module_id']) && $aPhotoIte['module_id'] == 'event') {
        $sFeedTable = 'event_feed';
    }
} 
 ";s:47:"photo.service_process_make_profile_picture__end";s:492:"if (\Phpfox::getUserBy('profile_page_id')) {
    if (!isset($sActualFile)) {
        $sActualFile = Phpfox::getLib('image.helper')->display(array(
                'server_id' => $aPhoto['server_id'],
                'path' => 'photo.url_photo',
                'file' => $aPhoto['destination'],
                'suffix' => '_1024',
                'return_url' => true
            )
        );
    }
    \Phpfox::getService('pages.process')->setProfilePicture($sActualFile);
} 
 ";s:30:"photo.set_cover_photo_for_item";s:642:"if (!empty($aVals['module_id']) && !empty($aVals['item_id']) && $aVals['module_id'] == 'pages' && Phpfox::isAppActive('Core_Pages')) {
    if (!Phpfox::getService('pages.process')->setCoverPhoto($aVals['item_id'], $iId, true)) {
        return $this->error(_p('Cannot set cover photo for this page.'));
    }
} 
 if (!empty($aVals['module_id']) && !empty($aVals['item_id']) && $aVals['module_id'] == 'groups' && Phpfox::isAppActive('PHPfox_Groups')) {
    if (!Phpfox::getService('groups.process')->setCoverPhoto($aVals['item_id'], $iId, true)) {
        return $this->error(_p('Cannot set cover photo for this group.'));
    }
} 
 ";s:3:"run";s:1399:"defined('PHPFOX') or exit('NO DICE!');

$iProfilePageId = Phpfox::getUserBy('profile_page_id');
if (!PHPFOX_IS_AJAX && $iProfilePageId > 0 && Phpfox::getLib('pages.facade')->getPageItemType($iProfilePageId) == 'pages') {
    $bSend = true;
    if (defined('PHPFOX_IS_PAGE_ADMIN')) {
        $bSend = false;
    } else {
        $aPage = Phpfox::getService('pages')->getPage(Phpfox::getUserBy('profile_page_id'));
        $sReq1 = Phpfox_Request::instance()->get('req1');

        if (!Phpfox::getService('pages')->isInPage()) {
            Phpfox_Url::instance()->forward(Phpfox::getService('pages')->getUrl($aPage['page_id'], $aPage['title'],
                $aPage['vanity_url']));
        }
    }
} 
 defined('PHPFOX') or exit('NO DICE!');

$iProfilePageId = Phpfox::getUserBy('profile_page_id');
if (!PHPFOX_IS_AJAX && $iProfilePageId > 0 && Phpfox::getLib('pages.facade')->getPageItemType($iProfilePageId) == 'groups') {
    $bSend = true;
    $aPage = \Phpfox::getService('groups')->getPage($iProfilePageId);
    $sReq1 = Phpfox_Request::instance()->get('req1');
    if (defined('PHPFOX_IS_PAGE_ADMIN')) {
        $bSend = false;
    }

    if ($bSend && !\Phpfox::getService('groups')->isInPage()) {
        Phpfox_Url::instance()->forward(Phpfox::getService('groups')->getUrl($aPage['page_id'], $aPage['title'],
            $aPage['vanity_url']));
    }
} 
 ";s:29:"user.service_process_update_1";s:861:"if(Phpfox::isAppActive('Core_Pages') && !empty($aInsert['full_name']) && !empty($aInsert['prev_full_name']) && ($aInsert['full_name'] !== $aInsert['prev_full_name']))
{
    $admins = db()->select('p.page_id AS page_id_owner, pa.page_id AS page_id_admin')
        ->from(Phpfox::getT('user'), 'u')
        ->leftJoin(Phpfox::getT('pages'), 'p', 'p.user_id = u.user_id')
        ->leftJoin(Phpfox::getT('pages_admin'), 'pa', 'pa.user_id = u.user_id')
        ->where('u.user_id = '. (int)$iUserId)
        ->execute('getSlaveRows');
    foreach ($admins as $admin)
    {
        $targetId = !empty($admin['page_id_owner']) ? $admin['page_id_owner'] : (!empty($admin['page_id_admin']) ? $admin['page_id_admin'] : 0);
        if(!empty($targetId))
        {
            $this->cache()->remove('pages_' . $targetId . '_admins');
        }
    }
} 
 ";s:32:"validator.admincp_settings_pages";s:193:"$aValidation = [
    'pages_limit_per_category' => [
        'title' => _p('validation_pages_limit_per_category_phrase'),
        'def' => 'int:required',
        'min' => 0
    ],
]; 
 ";s:37:"validator.admincp_user_settings_pages";s:488:"$aValidation = [
    'max_upload_size_pages' => [
        'title' => _p('validation_max_upload_size_pages_phrase'),
        'def' => 'int:required',
        'min' => 0,
    ],
    'points_pages' => [
        'title' => _p('validation_points_pages_phrase'),
        'min' => 0,
        'def' => 'int:required',
    ],
    'pages_flood_control' => [
        'title' => _p('validation_flood_control_phrase'),
        'min' => 0,
        'def' => 'int:required',
    ],
]; 
 ";s:18:"get_master_phrases";s:22:"$aOut[] = 'emoji'; 
 ";s:37:"validator.admincp_user_settings_music";s:1145:"$aValidation = [
    'max_songs_per_upload'      => [
        'def'   => 'int:required',
        'min'   => '1',
        'title' => _p('"Maximum number of songs per upload" must be greater than 0'),
    ],
    'points_music_song'         => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Activity points" must be greater than or equal to 0'),
    ],
    'music_max_file_size'       => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Maximum file size of songs uploaded" must be greater than or equal to 0'),
    ],
    'music_album_sponsor_price' => [
        'def'   => 'currency',
        'min'   => '0',
        'title' => _p('"Sponsor album price" must be greater than or equal to 0'),
    ],
    'music_song_sponsor_price'  => [
        'def'   => 'currency',
        'min'   => '0',
        'title' => _p('"Sponsor song price" must be greater than or equal to 0'),
    ],
    'points_music_playlist'     => [
        'def'   => 'int',
        'min'   => '0',
        'title' => _p('"Activity points" must be greater than or equal to 0'),
    ],
]; 
 ";s:34:"user.template.login_header_set_var";s:107:"if (setting('m9_facebook_enabled')) {
    Phpfox::getLib('template')->assign('bCustomLogin', true);
} 
 ";s:37:"user.template.register_header_set_var";s:107:"if (setting('m9_facebook_enabled')) {
    Phpfox::getLib('template')->assign('bCustomLogin', true);
} 
 ";s:41:"user.template_controller_login_block__end";s:290:"echo '<div class="fb_login">';
echo '<span class="fb_login_go"><span class="core-facebook-item-fb-icon"><img src="'.Phpfox::getParam('core.path_actual').'PF.Site/Apps/core-facebook/assets/images/fb-logo-white.png"></img></span>'. _p('sign_in_with_facebook') .'</span>';
echo '</div>'; 
 ";s:44:"user.template_controller_register_block__end";s:290:"echo '<div class="fb_login">';
echo '<span class="fb_login_go"><span class="core-facebook-item-fb-icon"><img src="'.Phpfox::getParam('core.path_actual').'PF.Site/Apps/core-facebook/assets/images/fb-logo-white.png"></img></span>'. _p('sign_up_with_facebook') .'</span>';
echo '</div>'; 
 ";s:35:"like.component_block_browse_process";s:405:"if ($this->request()->get('type_id') == 'groups') {
    $aPage = Phpfox::getService('groups')->getPage($this->request()->getInt('item_id'));
    if (!count($aLikes)) {
        $sErrorMessage = _p('this_group_has_no_members');
    }
}

if ($this->request()->get('type_id') == 'groups' && Phpfox::getService('groups')->isAdmin($this->request()->getInt('item_id'))) {
    $bIsPageAdmin = true;
} 
 ";s:39:"user.service_group_setting_params_names";s:4:" 
 ";s:33:"validator.admincp_settings_groups";s:187:"$aValidation = [
    'groups_limit_per_category' => [
        'title' => _p('validator_groups_limit_per_category'),
        'def' => 'int:required',
        'min' => 0
    ],
]; 
 ";s:38:"validator.admincp_user_settings_groups";s:366:"$aValidation = [
    'max_upload_size_groups' => [
        'title' => _p('validator_max_file_size_for_photos_upload'),
        'def' => 'int:required',
        'min' => 0
    ],
    'points_groups' => [
        'title' => _p('validator_activity_points_received_when_creating_a_new_group'),
        'def' => 'int:required',
        'min' => 0
    ],
]; 
 ";s:31:"validator.admincp_settings_mail";s:218:"$aValidation = [
    'chat_group_member_maximum' => [
        'def' => 'int:required',
        'min' => '2',
        'max' => '10',
        'title' => _p('mail_numbers_of_group_members_validation'),
    ]
]; 
 ";s:41:"admincp.service_module_process_delete_end";s:252:"if(Phpfox::isAppActive('Core_Activity_Points'))
{
    db()->delete(Phpfox::getT('activitypoint_setting'),'module_id = "'. $iId .'"');
    db()->update(Phpfox::getT('activitypoint_transaction'),['is_hidden' => 1] ,'module_id = "' . $iId .'"');
} 
 ";s:46:"core.template_block_notification_dropdown_menu";s:1486:"if(Phpfox::isAppActive('Core_Activity_Points') && setting('activitypoint.enable_activity_points')){
    $url = url('/activitypoint');
    $label = _p('activitypoint_title');
    echo '<li role="presentation">
       <a href="'. $url .'">
           <i class="ico ico-star-circle-o"></i>
           ' . $label . '
       </a>
   </li>';
} 
 /**
 * @copyright		[FOXEXPERT_COPYRIGHT]
 * @author  		Belan Ivan
 * @package  		App_Socialconnect
 */
if(Phpfox::getUserParam('socialconnect.socialconnect_view')){
    $url = url('/socialconnect');
    $label = _p('Manage Social Connections');
    echo '<li role="presentation">
       <a href="'. $url .'">
           <i class="fa fa-plug"></i>
           ' . $label . '
       </a>
   </li>';
} 
 if (Phpfox::getParam('feed.enable_hide_feed', 1)) {
    echo
        '<li role="presentation">
            <a href="javascript:void(0)" onclick="tb_show(\'' . _p('manage_hidden') . '\', $.ajaxBox(\'feed.manageHidden\', \'\'));">
                <i class="ico ico-eye-alt-blocked" aria-hidden="true"></i>' . _p('manage_hidden') . '
            </a>
        </li>';
} 
 $aPromotions = Phpfox::getService('user.promotion')->getPromotionsByUserGroup();
if (count($aPromotions)) {
    $url = url('user/promotion');
    $label = _p('promotions');
    echo '<li role="presentation">
       <a href="'. $url .'">
           <i class="ico ico-target-o"></i>
           ' . $label . '
       </a>
   </li>';
} 
 ";s:20:"on_after_install_app";s:551:"$specialApps = [
    'Core_Subscriptions' => 'subscribe'
];

if(in_array($param['productId'], array_keys($specialApps))) {
    $moduleId = $specialApps[$param['productId']];
    $hasTransaction = db()->select('COUNT(transaction_id)')
        ->from(Phpfox::getT('activitypoint_transaction'))
        ->where(['module_id' => $moduleId, 'is_hidden' => 1])
        ->executeField();
    if(!empty($hasTransaction)) {
        db()->update(Phpfox::getT('activitypoint_transaction'), ['is_hidden' => 0], ['module_id' => $moduleId]);
    }
} 
 ";s:22:"on_after_uninstall_app";s:268:"if(Phpfox::isAppActive('Core_Activity_Points'))
{
    db()->delete(Phpfox::getT('activitypoint_setting'),'module_id = "'. $this->alias .'"');
    db()->update(Phpfox::getT('activitypoint_transaction'),['is_hidden' => 1] ,'module_id = "' . $this->alias .'"');
} 
 ";s:52:"user.include_service_group_setting_import_module_end";s:1200:"$sSettingMainModule =  ($sModule === null ? $aRow['module_id'] : $sModule);
if(Phpfox::isAppActive('Core_Activity_Points') && preg_match('/points_/',$aRow['value']) && $sSettingMainModule !== 'activitypoint')
{
    $iCnt = db()->select('COUNT(*)')
        ->from(Phpfox::getT('activitypoint_setting'))
        ->where(['module_id' => $sSettingMainModule, 'var_name' => $aRow['value']])
        ->execute('getSlaveField');
    if(!$iCnt)
    {
        $aInsert = [
            'var_name' => $aRow['value'],
            'phrase_var_name' => 'user_setting_'.$aRow['value'],
            'module_id' => $sSettingMainModule
        ];
        db()->insert(Phpfox::getT('activitypoint_setting'), $aInsert);
        Phpfox::getLib('cache')->removeGroup('activitypoint_setting_actions');
    }

    $iTransactionCnt = db()->select('COUNT(*)')
        ->from(Phpfox::getT('activitypoint_transaction'))
        ->where('module_id = "'. $sSettingMainModule .'" AND is_hidden = 1')
        ->execute('getSlaveField');
    if($iTransactionCnt)
    {
        db()->update(Phpfox::getT('activitypoint_transaction'),['is_hidden' => 0], 'module_id = "'. $sSettingMainModule. '"');
    }
} 
 ";s:54:"user.include_service_group_setting_importfromapp_start";s:1082:"if(Phpfox::isAppActive('Core_Activity_Points') && preg_match('/points_/',$sVarName) && $sAlias !== 'activitypoint')
{

    $iCnt = db()->select('COUNT(*)')
        ->from(Phpfox::getT('activitypoint_setting'))
        ->where(['module_id' => $sAlias, 'var_name' => $sVarName])
        ->execute('getSlaveField');
    if(!$iCnt)
    {
        $aInsert = [
            'var_name' => $sVarName,
            'phrase_var_name' => 'user_setting_'.$sVarName,
            'module_id' => $sAlias
        ];
        db()->insert(Phpfox::getT('activitypoint_setting'), $aInsert);
        Phpfox::getLib('cache')->removeGroup('activitypoint_setting_actions');
    }

    $iTransactionCnt = db()->select('COUNT(*)')
                    ->from(Phpfox::getT('activitypoint_transaction'))
                    ->where('module_id = "'. $sAlias .'" AND is_hidden = 1')
                    ->execute('getSlaveField');
    if($iTransactionCnt)
    {
        db()->update(Phpfox::getT('activitypoint_transaction'),['is_hidden' => 0], 'module_id = "'. $sAlias . '"');
    }
} 
 ";s:28:"user.service_process_add_end";s:107:"if(!empty($iId))
{
    db()->insert(Phpfox::getT('activitypoint_statistics'),['user_id' => $iId]);
} 
 ";s:40:"validator.admincp_settings_activitypoint";s:22:"$aValidation = []; 
 ";s:41:"feed.component_block_edit_user_status_end";s:113:"if (!empty($module) && $module == 'event') {
    $this->template()->assign(['bLoadTagFriends' => false]);
} 
 ";s:34:"feed.template_block_comment_border";s:166:"defined('PHPFOX') or exit('NO DICE!');

if (Phpfox_Module::instance()->getFullControllerName() == 'event.index') {
    Phpfox::getBlock('event.rsvp-entry');
} 
 ";s:37:"friend.component_block_search_process";s:582:"defined('PHPFOX') or exit('NO DICE!');

if ($sFriendModuleId == 'event') {
    $aInviteCache = Phpfox::getService('event')->isAlreadyInvited($this->getParam('friend_item_id', '0'), $aFriends);
    if (is_array($aInviteCache)) {
        foreach ($aFriends as $iKey => $aFriend) {
            if (isset($aInviteCache[$aFriend['user_id']])) {
                $aFriends[$iKey]['is_active'] = $aInviteCache[$aFriend['user_id']];
            }
        }

        $this->template()->assign(array(
                'aFriends' => $aFriends
            )
        );
    }
} 
 ";s:37:"validator.admincp_user_settings_event";s:913:"$aValidation = [
    'max_upload_size_event' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Max file size for event photos" must be greater or equal to 0'),
    ],
    'total_mass_emails_per_hour' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Waiting time to send out another mass email" must be greater or equal to 0'),
    ],
    'points_event' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Activity points" must be greater or equal to 0'),
    ],
    'flood_control_events' => [
        'def' => 'int',
        'min' => '0',
        'title' => _p('"Waiting time to add new event" must be greater or equal to 0'),
    ],
    'event_sponsor_price' => [
        'def' => 'currency',
        'min' => '0',
        'title' => _p('"Sponsor event price" must be greater than or equal to 0'),
    ],
]; 
 ";s:26:"forum.component_ajax_reply";s:369:"echo '<script type="text/javascript"> 
$Behavior.CKEditor_forum_submit_reply = function() {
    $(\'#js_forum_form_submit_btn\').on(\'click\', function () {
        CKEDITOR.instances.text.updateElement();
    });
    
    $(\'#js_forum_form_submit_btn\').on(\'submit\', function () {
        CKEDITOR.instances.text.updateElement();
    });
}
</script>'; 
 ";s:14:"get_editor_end";s:1574:"$jscript = "if(typeof ckeditor_initialize != 'function'){
    function ckeditor_initialize(sid, mode){
        return function(){
            var ele  = $('#' + sid);
            if(!ele.length) return;
            if(ele.data('ckeditor_built')) return;
            ele.attr('data-ckeditor_built',true);
            CKEDITOR.config.contentsLangDirection = document.dir;
            CKEDITOR.config.extraAllowedContent = 'img(parsed_image)';
            if (mode == 'full_height') {
                CKEDITOR.config.height = window.innerHeight-110;
                CKEDITOR.replace(sid, {});
            } else if(mode == 'simple') {
                CKEDITOR.config.height = 60;
                CKEDITOR.replace(sid, {
                    toolbar: [{ name: 'basicstyles', items: [ 'Bold', 'Italic' ] }]
                });
            } 
            else if(mode == 'none_full') {
                CKEDITOR.replace(sid, {});
            }
            else {
                CKEDITOR.replace(sid,{
                    removePlugins: 'sourcearea'
                });
            }
        }
    }
}";

if (!isset($aParams['enter'])) {
    $mode = isset($aParams['mode']) && $aParams['mode'] ? $aParams['mode'] : (isset($aParams['simple']) && $aParams['simple'] ? 'simple' : 'none');
    $sPackage = setting('ckeditor_package');
    if($mode == 'none') {
        $mode .= '_' . $sPackage;
    }
    $sStr .= '<script>' . $jscript . '$Behavior.loadEditor' . $iId . '  = ckeditor_initialize("' . $iId . '","' . $mode . '");' . '</script>';
} 
 ";s:14:"set_editor_end";s:361:"$sPackage = setting('ckeditor_package');
switch ($sPackage) {
    case 'full':
        $file = 'ckeditor_full/ckeditor.js';
        break;
    case 'basic':
        $file = 'ckeditor_basic/ckeditor.js';
        break;
    default:
        $file = 'ckeditor/ckeditor.js';
        break;
}
$this->setHeader([
    $file => 'app_core-CKEditor'
]); 
 ";s:36:"template_getheader_exclude_bundle_js";s:48:"$aExcludeBundles[] = 'ckeditor/ckeditor.js'; 
 ";s:26:"template_getheader_setting";s:37:"$aJsVars['sEditor'] = 'CKEditor'; 
 ";s:27:"friend.service_friend_get_2";s:286:"if (Phpfox::isUser()) {
    $aRows[$iKey]['is_blocked'] = Phpfox::getService('user.block')->isBlocked($aRow['user_id'], Phpfox::getUserId());
}

if (!isset($aUser['is_featured'])) {
    $aRows[$iKey]['is_featured'] = Phpfox::getService('user')->isFeatured($aRow['user_id']);
} 
 ";s:21:"get_module_blocks_end";s:353:"if ($iId == 6) {
    array_splice($aBlocks[$iId], 1, 0, [['type_id' => 0, 'component' => 'core.template-breadcrumbmenu', 'params' => []]]);
} else if ($iId == 1 && Phpfox::getLib('module')->getFullControllerName() == 'search.index') {
    array_unshift($aBlocks[$iId], ['type_id' => 0, 'component' => 'core.template-menusub', 'params' => []]);
} 
 ";s:24:"groups.block_photo_menus";s:80:"echo Phpfox::getLib('template')->getBuiltFile('core.block.actions-buttons'); 
 ";s:23:"pages.block_photo_menus";s:80:"echo Phpfox::getLib('template')->getBuiltFile('core.block.actions-buttons'); 
 ";s:27:"phpfox_assign_ajax_browsing";s:208:"if (!empty($aBreadCrumbs) && empty($aBreadCrumbTitle)) {
    list($value, $key) = [end($aBreadCrumbs), key($aBreadCrumbs)];
    unset($aBreadCrumbs[$key]);
    $aBreadCrumbTitle = [$value, $key, 1];
} 
 ";s:51:"profile.component_controller_statistics_process_end";s:465:"$aIcons = [];
foreach ($aModules as $sModuleId => $aModule) {
    foreach ($aModule as $sPhrase => $sLink) {
        if (function_exists('materialParseIcon')) {
            $aIcons[$sPhrase] = materialParseIcon($sModuleId);
        }
    }
}
$this->template()->assign([
    'aIcons'      => $aIcons,
    'iTotalItems' => $aActivites[_p('total_items')]
]);
unset($aActivites[_p('total_items')]);
$this->template()->assign('aActivites', $aActivites); 
 ";s:40:"profile.service_profile_get_profile_menu";s:479:"if (function_exists('materialParseIcon')) {
    foreach ($aMenus as $key => $aMenu) {
        if (empty($aMenu['icon_class'])) {
            $sType = 'default';
            if (!empty($aMenu['actual_url']) && preg_match('/profile_/i', $aMenu['actual_url'])) {
                $aParts = explode('_', $aMenu['actual_url'], 2);
                $sType = $aParts[1];
            }

            $aMenus[$key]['icon_class'] = materialParseIcon($sType);
        }
    }
} 
 ";s:45:"search.component_controller_index_process_end";s:314:"if (isset($aMenus)) {
    $aFilterMenusIcons = [
        _p('all_results') => materialParseIcon('all_results')
    ];
    foreach ($aMenus as $sKey => $aMenu) {
        $aFilterMenusIcons[$aMenu['name']] = materialParseIcon($sKey);
    }

    $this->template()->assign(compact('aFilterMenusIcons'));
} 
 ";s:38:"template_template_getmenu_process_menu";s:351:"if ($sConnection == 'main') {
    if (function_exists('materialParseMobileIcon') && !empty($aMenus[$iKey]['module'])) {
        $aMenus[$iKey]['mobile_icon'] = materialParseMobileIcon($aMenus[$iKey]['mobile_icon']);
    }

    if (!empty($aMenus[$iKey]['is_selected'])) {
        $this->assign('aMainSelectedMenu', $aMenus[$iKey]);
    }
} 
 ";s:32:"user.service_privacy_privacy_get";s:303:"foreach ($aItems as $sModule => $aSettings) {
    foreach ($aSettings as $sKey => $aItem) {
        if (!isset($aItems[$sModule][$sKey]['icon_class']) && function_exists('materialParseIcon')) {
            $aItems[$sModule][$sKey]['icon_class'] = materialParseIcon($sModule);
        }
    }
} 
 ";s:27:"forum.template_block_post_1";s:4:" 
 ";s:31:"validator.admincp_settings_core";s:1512:"$aValidation['auto_deny_items'] = [
    'def' => 'int:required',
    'min' => '2',
    'title' => _p('"SPAM Count" must be greater than 1'),
];


$aValidation['cookie_path'] = [
    'def'=> 'required',
    'title'=> 'Cookie path is required field',
];

$aValidation['auto_ban_spammer'] = [
    'def'=> 'int',
    'min' => '0',
    'title'=> '"Auto Ban Spammers" must be greater than or equal to 0',
];

$aValidation['auto_clear_cache'] = [
    'def'=> 'int',
    'min' => '0',
    'title'=> '"Auto clear system cache" must be greater than or equal to 0',
];

$aValidation['force_https_secure_pages'] = [
    'def'=> 'required',
    'requirements' => [
        'callback' => 'validation_check_valid_ssl'
    ],
    'title'=> 'Your server does not support https',
];

if (!function_exists('validation_check_valid_ssl')) {
    function validation_check_valid_ssl($value)
    {
        if ($value == false) {
            return true;
        }
        $sUrl = Phpfox::getLib('url')->makeUrl('');
        $sUrl = str_replace('http://', 'https://', $sUrl);

        $ch = curl_init($sUrl);
        curl_setopt($ch, CURLOPT_HEADER, true);
        curl_setopt($ch, CURLOPT_NOBODY, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
        curl_setopt($ch, CURLOPT_TIMEOUT,10);
        $output = curl_exec($ch);
        $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        return ($http_code == 200) ? true : false;
    }
} 
 ";s:37:"validator.admincp_settings_group_mail";s:218:"$aValidation['mail_from_name'] = [
    'def' => 'required',
    'title' => _p('"Name" is required')
];
$aValidation['email_from_email'] = [
    'def' => 'required',
    'title' => _p('"From" is required')
]; 
 ";s:27:"feed.template_block_entry_2";s:3658:"if(!empty($this->_aVars['aFeed'])) {
    $aFeed = $this->_aVars['aFeed'];
    $noShowReport = ['user_status', 'friend', 'poke'];
    $aParts = explode('_', $aFeed['type_id']);
    if(!in_array($aFeed['type_id'], $noShowReport) && Phpfox::hasCallback($aParts[0],'getReportRedirect' . (isset($aParts[1]) ? ucfirst($aParts[1]) : '')) && $aFeed['user_id'] != Phpfox::getUserId() && (!isset($this->_aVars['sFeedType']) || isset($aFeed['feed_view_comment'])) && !isset($aFeed['report_module']))
    {
        echo "<li><a href=\"#?call=report.add&amp;height=100&amp;width=400&amp;type=". $aFeed['type_id']. "&amp;id=" . $aFeed['item_id'] ."\" class=\"inlinePopup activity_feed_report\" title=\"". _p('report'). "\">
				<span class=\"ico ico-warning-o\"></span>
				". _p('report'). "</a>
		</li>";
    }

    $showEdit = ['link', 'photo', 'v'];
    if(in_array($aFeed['type_id'], $showEdit) && (!isset($aFeed['is_view_item']) || isset($aFeed['feed_view_comment']))) {
        $canEdit = false;
        $module = '';
        $itemId = '';
        $feedCallback = $this->_aVars['aFeedCallback'];
        $feedType = $aFeed['type_id'];
        switch ($feedType) {
            case 'link': {
                $item = Phpfox::getService('link')->getLinkById($aFeed['item_id']);
                break;
            }
            case 'photo': {
                $item = Phpfox::getService('photo')->getPhotoItem($aFeed['item_id']);
                break;
            }
            case 'v': {
                $item = Phpfox::getService('v.video')->getForEdit($aFeed['item_id']);
                break;
            }
        }

        if(!empty($feedCallback['module']) && !empty($feedCallback['item_id'])) {
            $module = $feedCallback['module'];
            $itemId = $feedCallback['item_id'];
            if(in_array($module, ['pages', 'groups']) && !empty($item) && ($item['module_id'] == $module) && (defined('PHPFOX_IS_PAGES_VIEW') && defined('PHPFOX_PAGES_ITEM_TYPE') && PHPFOX_PAGES_ITEM_TYPE === $module)) {
                $isAdmin = Phpfox::getService($module)->isAdmin($aFeed['parent_user_id']);
                $canEdit = ($aFeed['user_id'] == Phpfox::getUserId()) || $isAdmin;
            } else {
                $canEdit = (Phpfox::getUserParam('feed.can_edit_own_user_status') && $aFeed['user_id'] == Phpfox::getUserId()) || Phpfox::getUserParam('feed.can_edit_other_user_status');
            }
        } else {
            if((in_array($feedType, ['link', 'photo'])  && empty($item['module_id'])) || ($feedType == 'v' && in_array($item['module_id'], ['user', 'video']))) {
                $canEdit = (Phpfox::getUserParam('feed.can_edit_own_user_status') && $aFeed['user_id'] == Phpfox::getUserId()) || Phpfox::getUserParam('feed.can_edit_other_user_status');
            }
        }

        if($canEdit) {
            echo "<li class=\"\"><a href=\"#\" class=\"\" onclick=\"tb_show('" ._p('edit_your_post')."', $.ajaxBox('feed.editUserStatus', 'height=400&amp;width=600&amp;id=". $aFeed['feed_id'] ."&amp;module=". $module ."&amp;item_id=". $itemId ."')); return false;\">
			<span class=\"ico ico-pencilline-o\"></span>". _p('edit') ."</a></li>";
        }
    }
}

if (!empty($aFeed['can_remove_tag'])) {
    echo "<li class=\"\"><a href=\"#\" onclick=\"\$Core.feed.removeTag({$aFeed['feed_id']},{$aFeed['item_id']},'{$aFeed['type_id']}');return false;\" class=\"\"><span class=\"ico ico-price-tag-o\"></span>" . _p('remove_tag_upper') . "</a></li>";
}
if(Phpfox::getParam('feed.enable_hide_feed', 1)) {
    Phpfox_Template::instance()->getTemplate('feed.block.link-hide');
} 
 ";s:31:"validator.admincp_settings_feed";s:156:"$aValidation['feed_display_limit'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Feed display limit must be greater than 0',
]; 
 ";s:36:"validator.admincp_user_settings_feed";s:106:"$aValidation['feed_sponsor_price'] = [
    'def' => 'integer',
    'title' => 'Name is required'
]; 
 ";s:33:"validator.admincp_settings_friend";s:348:"$aValidation['friend_display_limit'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Friend display limit must be greater than 0',
];
$aValidation['friend_suggestion_search_total'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => '"Friends Suggestion Friends Check Count" must be greater than 0',
]; 
 ";s:38:"validator.admincp_user_settings_friend";s:204:"$aValidation = [
    'total_folders' => [
        'def' => 'int:required',
        'min' => 0,
        'title' => _p('allowed_total_friend_folders_must_be_greater_than_or_equals_to_0'),
    ]
]; 
 ";s:33:"validator.admincp_settings_invite";s:202:"$aValidation = [
    'pendings_to_show_per_page'=>[
        'def' => 'int:required',
        'min' => '1',
        'title' => _p('"How Many Pendings To Show" must be greater than 0'),
    ]
]; 
 ";s:39:"validator.admincp_settings_notification";s:362:"$aValidation['notify_ajax_refresh'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => _p('"Site Wide Notification AJAX Refresh" must be greater than 0'),
];
$aValidation['total_notification_title_length'] = [
    'def' => 'int:required',
    'min' => '11',
    'title' => _p('"Notification Title Length" must be greater than 10'),
]; 
 ";s:35:"core.template_block_template_menu_1";s:683:";
if (Phpfox::isModule('socialbridge'))
{
    $sText = _p('socialbridge.manage_social_accounts');
    $sLink = Phpfox::getLib('url')->makeUrl('socialbridge.setting');
    $sAttach = "<li role='presentation' id='socialbridge_setting'><a href='".$sLink."'><i class='fa fa-share-alt'></i>".$sText."</a></li>";
?>

<script type="text/javascript">
	$Ready(function()
	{
        if($("#socialbridge_setting").length) return false;
		$('#header_menu .feed_form_menu .nav_header ul li:nth-child(3)').after("<?php echo $sAttach; ?>");
		$('#section-header #user_sticky_bar .dropdown-menu-right li:nth-child(3)').after("<?php echo $sAttach; ?>");
	});
</script>
<?php
}
; 
 ";s:18:"template_getheader";s:477:"defined('PHPFOX') or exit('NO DICE!');

if (Phpfox::getLib('request')->getRequests() == [
        'req1' => 'admincp',
        'req2' => 'app',
        'id' => '__module_socialbridge'
    ]) {
    Phpfox::getLib('url')->send('admincp.socialbridge.providers');
} 
 if(Phpfox::getLib('request')->getRequests() == [
    'req1' => 'admincp',
    'req2' => 'app',
    'id' => '__module_ynresphoenix'
]) {
    Phpfox::getLib('url')->send('admincp.ynresphoenix');
} 
 ";s:30:"validator.admincp_settings_tag";s:205:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['tag_trend_total_display'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => 'Total tag to display must be greater than 0',
]; 
 ";s:31:"validator.admincp_settings_user";s:1653:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['date_of_birth_start'] = [
    'def' => 'int:required',
    'min' => '1900',
    'max' => '2017',
    'title' => '"Date of Birth (Start)" the range is accepted: 1900 -> 2017',
];
$aValidation['date_of_birth_end'] = [
    'def' => 'int:required',
    'min' => '1900',
    'max' => '2017',
    'requirements'=>[
        'min'=> '$date_of_birth_start',
    ],
    'title' => '"Date of Birth (End)" the range is accepted: 1900 -> 2017, and large than "Date of Birth (Start)"',
];
$aValidation['maximum_length_for_full_name'] = [
    'def' => 'int:required',
    'min' => '5',
    'requirements'=>[
        'min'=> '$min_length_for_username',
    ],
    'title' => '"Maximum Length for Full Name" must be greater than 4 and large than "Minimum Length for Username"',
];
$aValidation['min_length_for_username'] = [
    'def' => 'int:required',
    'min' => '1',
    'title' => '"Minimum Length for Username" must be greater than 0.',
];
$aValidation['max_length_for_username'] = [
    'def' => 'int:required',
    'min' => '1',
    'requirements'=>[
        'min'=> '$min_length_for_username',
    ],
    'title' => '"Maximum Length for Username" must be greater than "Minimum Length for Username"',
];

$aValidation['check_status_updates'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('"Spam Check Status Updates" be greater than or equal to 0'),
];
$aValidation['resend_verification_email_delay_time'] = [
    'def' => 'int',
    'min' => '0',
    'title' => _p('resend_verification_email_delay_time_must_be_more_than_or_equal_to_0'),
]; 
 ";s:36:"validator.admincp_user_settings_user";s:482:"defined('PHPFOX') or exit('NO DICE!');

$aValidation['total_times_can_change_user_name'] = [
    'def' => 'int',
    'min' => '0',
    'title' => '"How many times can this user group edit their user name" must be greater than or equal to 0',
];
$aValidation['total_times_can_change_own_full_name'] = [
    'def' => 'int',
    'min' => '0',
    'title' => '"How many times can members of this user group change their full name?" must be greater than or equal to 0',
]; 
 ";}s:1:"g";a:0:{}s:1:"e";O:8:"DateTime":3:{s:4:"date";s:26:"2020-09-26 01:21:36.422865";s:13:"timezone_type";i:3;s:8:"timezone";s:3:"GMT";}s:1:"m";N;s:1:"c";N;}